;;; EuLisp system 'youtoo'
;;;   Interface file for module read

(definterface read
  (import (telos condition convert convert1 vector string lock dynamic table stream)
   syntax (_macros)
   full-import (mop-alloc mop-access mop-prim mop-key mop-class mop-init mop-inspect mop-gf mop-meth mop-defcl boot boot1 telos let-cc dynamic thread event condition convert table table1 vector list character string fpi copy number integer collect callback compare convert1 lock socket stream2 stream1 stream)
   export (
    ((name . special-tokens) (pos . 29) (origin read . special-tokens) (class . constant))
    ((name . unquote-splicing-mark) (pos . 25) (origin read . unquote-splicing-mark) (class . constant))
    ((name . read-char) (pos . 5) (origin read . read-char))
    ((name . set-dispatch-macro-character) (pos . 16) (origin read . set-dispatch-macro-character))
    ((name . list-stop) (pos . 7) (origin read . list-stop) (class . constant))
    ((name . read-line) (pos . 15) (origin read . read-line))
    ((name . read-s-expression) (pos . 11) (origin read . read-s-expression))
    ((name . dot) (pos . 19) (origin read . dot) (class . constant))
    ((name . unquote-mark) (pos . 8) (origin read . unquote-mark) (class . constant))
    ((name . vector-stop) (pos . 23) (origin read . vector-stop) (class . constant))
    ((name . eos) (pos . 6) (origin read . eos) (class . constant))
    ((name . quote-mark) (pos . 20) (origin read . quote-mark) (class . constant))
    ((name . lispin) (pos . 12) (origin read . lispin) (class . constant))
    ((name . <read-error>) (pos . 9) (origin read . <read-error>) (class . constant))
    ((name . list-start) (pos . 14) (origin read . list-start) (class . constant))
    ((name . quasiquote-mark) (pos . 21) (origin read . quasiquote-mark) (class . constant))
    ((name . sread-s-expression) (pos . 4) (origin read . sread-s-expression))
    ((name . read-token) (pos . 26) (origin read . read-token))
    ((name . *dispatch-macro-character-table*) (pos . 17) (origin read . *dispatch-macro-character-table*))
    ((name . sread) (pos . 10) (origin read . sread))
    ((name . vector-start) (pos . 18) (origin read . vector-start) (class . constant))
    ((name . read) (pos . 24) (origin read . read))
   )
   local-literals (
    (top-level . 106)
    (sread-s-expression . 105)
    (read-char . 104)
    (sread . 103)
    (read-s-expression . 102)
    (read-line . 101)
    (set-dispatch-macro-character . 100)
    (read . 99)
    (read-token . 98)
    (parse . 97)
    (reverse-onto . 96)
    ("unexpected token ~a" . 92)
    ("misplaced unquote-splicing" . 91)
    (unquote-splicing . 90)
    ("misplaced unquote" . 89)
    (quasiquote . 88)
    (quote . 87)
    ("unexpected end of file during list ~a" . 85)
    (" ... " . 84)
    ("misplaced dot after ~s" . 83)
    ("misplaced dot/unquote after ~s" . 82)
    (unquote . 81)
    ("unexpected end of file during vector ~a" . 79)
    (buffer: . 67)
    (*clean-ups* . 66)
    (value: . 63)
    (|(method specialp)| . 61)
    (|(setter tag)| . 60)
    (specialp . 59)
    ("" . 58)
    (string: . 57)
    ("<end of stream>" . 56)
    ("." . 55)
    (",@" . 54)
    ("," . 53)
    ("`" . 52)
    ("'" . 51)
    ("#(" . 50)
    (")" . 49)
    ("(" . 48)
    ((tag:) . 47)
    (special . 46)
    (tag: . 45)
    (keyword: . 44)
    (tag . 43)
    (direct-keywords: . 42)
    (direct-slots: . 41)
    (direct-superclasses: . 40)
    (read-error . 39)
    (name: . 38)
    (anonymous . 37)
    (read-action: . 36)
    (source: . 35)
   )
   literals (
   )
))
