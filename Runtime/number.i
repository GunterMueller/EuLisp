;;; EuLisp system 'youtoo'
;;;   Interface file for module number

(definterface number
  (import (telos callback compare copy)
   syntax (_telos0)
   full-import (mop-alloc mop-access mop-prim mop-key mop-class mop-init mop-inspect mop-gf mop-meth mop-defcl boot boot1 telos condition event thread dynamic let-cc callback compare copy)
   export (
    ((name . binary-) (pos . 7) (origin number . binary-))
    ((name . binary-gcd) (pos . 25) (origin number . binary-gcd))
    ((name . binary-mod) (pos . 6) (origin number . binary-mod))
    ((name . lcm) (pos . 22) (origin number . lcm))
    ((name . signum) (pos . 3) (origin number . signum) (inline (G001882 (stack-ref 0) (fpi-zerop) (stack-ref 0) (branch-nil G001884number) (stack-ref 0) (branch G001885number) (label G001884number) (stack-ref 1) (stack-ref 0) (static-ref0) (fpi-lt) (stack-ref 0) (branch-nil G001886G001879number) (static-ref0) (stack-ref 2) (fpi-difference) (branch G001886G001880number) (label G001886G001879number) (stack-ref 1) (label G001886G001880number) (nobble 1) (nobble 1) (stack-ref 2) (stack-ref 1) (fpi-quotient) (nobble 1) (label G001885number) (nobble 1) (nobble 1))))
    ((name . binary-lcm) (pos . 18) (origin number . binary-lcm))
    ((name . <number>) (pos . 5) (origin number . <number>) (class . constant))
    ((name . binary%) (pos . 4) (origin number . binary%))
    ((name . mod) (pos . 17) (origin number . mod))
    ((name . binary*) (pos . 11) (origin number . binary*))
    ((name . gcd) (pos . 21) (origin number . gcd))
    ((name . binary/) (pos . 16) (origin number . binary/))
    ((name . -) (pos . 2) (origin number . -))
    ((name . +) (pos . 10) (origin number . +))
    ((name . abs) (pos . 19) (origin number . abs) (inline (G001877 (stack-ref 0) (static-ref0) (fpi-lt) (stack-ref 0) (branch-nil G001879number) (static-ref0) (stack-ref 2) (fpi-difference) (branch G001880number) (label G001879number) (stack-ref 1) (label G001880number) (nobble 1) (nobble 1))))
    ((name . positivep) (pos . 15) (origin number . positivep) (inline (G001888 (static-ref0) (stack-ref 1) (fpi-lt) (nobble 1))))
    ((name . /) (pos . 9) (origin number . /))
    ((name . negativep) (pos . 20) (origin number . negativep) (inline (G001890 (static-ref0) (fpi-lt))))
    ((name . zerop) (pos . 8) (origin number . zerop))
    ((name . *) (pos . 24) (origin number . *))
    ((name . numberp) (pos . 23) (origin number . numberp))
    ((name . %) (pos . 14) (origin number . %))
    ((name . binary+) (pos . 13) (origin number . binary+))
    ((name . negate) (pos . 12) (origin number . negate))
   )
   local-literals (
    (top-level . 86)
    (- . 85)
    (signum . 84)
    (/ . 83)
    (+ . 82)
    (% . 81)
    (positivep . 80)
    (mod . 79)
    (abs . 78)
    (negativep . 77)
    (gcd . 76)
    (lcm . 75)
    (* . 74)
    (anonymous . 54)
    (|(method deep-copy)| . 51)
    (|(method shallow-copy)| . 50)
    (|(method negate)| . 49)
    (|(method numberp)| . 48)
    (binary-lcm . 47)
    (binary-gcd . 46)
    (binary-mod . 45)
    (binary% . 44)
    (binary/ . 43)
    (binary* . 42)
    (binary- . 41)
    (binary+ . 40)
    (negate . 39)
    (zerop . 38)
    (numberp . 37)
    (abstractp: . 36)
    (direct-keywords: . 35)
    (direct-slots: . 34)
    (direct-superclasses: . 33)
    (number . 32)
    (name: . 31)
   )
   literals (
   )
))
