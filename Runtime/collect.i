;;; EuLisp system 'youtoo'
;;;   Interface file for module collect

(definterface collect
  (import (telos compare)
   syntax (_telos0)
   full-import (mop-alloc mop-access mop-prim mop-key mop-class mop-init mop-inspect mop-gf mop-meth mop-defcl boot boot1 telos callback let-cc dynamic thread event condition compare)
   export (
    ((name . allp) (pos . 14) (origin collect . allp))
    ((name . concatenate) (pos . 18) (origin collect . concatenate))
    ((name . sort!) (pos . 9) (origin collect . sort!))
    ((name . size) (pos . 8) (origin collect . size))
    ((name . delete) (pos . 27) (origin collect . delete))
    ((name . reverse) (pos . 26) (origin collect . reverse))
    ((name . remove) (pos . 13) (origin collect . remove))
    ((name . reverse!) (pos . 10) (origin collect . reverse!))
    ((name . sort) (pos . 17) (origin collect . sort))
    ((name . name) (pos . 7) (origin collect . name))
    ((name . accumulate1) (pos . 12) (origin collect . accumulate1))
    ((name . member) (pos . 11) (origin collect . member))
    ((name . reset) (pos . 19) (origin collect . reset))
    ((name . accumulate) (pos . 25) (origin collect . accumulate))
    ((name . find) (pos . 16) (origin collect . find))
    ((name . <collection>) (pos . 24) (origin collect . <collection>) (class . constant))
    ((name . collectionp) (pos . 23) (origin collect . collectionp))
    ((name . <sequence>) (pos . 6) (origin collect . <sequence>) (class . constant))
    ((name . emptyp) (pos . 3) (origin collect . emptyp))
    ((name . select) (pos . 4) (origin collect . select))
    ((name . element) (pos . 22) (origin collect . element))
    ((name . do) (pos . 5) (origin collect . do))
    ((name . sequencep) (pos . 21) (origin collect . sequencep))
    ((name . anyp) (pos . 15) (origin collect . anyp))
    ((name . fill) (pos . 20) (origin collect . fill))
    ((name . map) (pos . 2) (origin collect . map))
   )
   local-literals (
    (top-level . 81)
    (|(method name)| . 79)
    ((setter element) . 78)
    (setter . 77)
    (|(method find)| . 76)
    (|(method equal)| . 75)
    (|(method sequencep)| . 74)
    (|(method collectionp)| . 73)
    (name . 72)
    (concatenate . 71)
    (sort! . 70)
    (sort . 69)
    (reverse! . 68)
    (reverse . 67)
    (size . 66)
    (emptyp . 65)
    (reset . 64)
    (remove . 63)
    (delete . 62)
    (element . 61)
    (select . 60)
    (find . 59)
    (member . 58)
    (fill . 57)
    (map . 56)
    (do . 55)
    (allp . 54)
    (anyp . 53)
    (accumulate1 . 52)
    (accumulate . 51)
    (sequencep . 50)
    (collectionp . 49)
    ((size: fill-value:) . 48)
    (fill-value: . 47)
    (size: . 46)
    (sequence . 45)
    (abstractp: . 44)
    (direct-keywords: . 43)
    (direct-slots: . 42)
    (direct-superclasses: . 41)
    (collection . 40)
    (name: . 39)
   )
   literals (
   )
))
