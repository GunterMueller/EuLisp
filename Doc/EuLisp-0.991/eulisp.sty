%%% ----------------------------------------------------------------------------
\typeout{Document style `EuLisp'  - May 89, July 92, Mar 2010}

\RequirePackage{ifthen}

% ------------------------------------------------------------------------------
%%% Default page layout

\renewcommand*{\textfraction}{.1}
\renewcommand*{\topfraction}{.9}
\renewcommand*{\bottomfraction}{.1}
\renewcommand*{\floatpagefraction}{.9}

% ------------------------------------------------------------------------------
%%% Optional sections: optRationale/optDefinition/optPrivate

\usepackage{comment}
\excludecomment{optDefinition}
\excludecomment{optRationale}
\excludecomment{optPrivate}

% ------------------------------------------------------------------------------
%%% Macros for commonly used names

\newcommand*{\telos}{{\small T}{\scriptsize ELOS}}
\newcommand*{\lisp}{{\small L}{\scriptsize ISP}}
\newcommand*{\lelisp}{{\small L}{\scriptsize E}$\!${\small -}$\!$\lisp}
\newcommand*{\mceyx}{$\mu${\small C}{\scriptsize EYX}}
\newcommand*{\eulisp}{$\!\!${\small E}{\scriptsize U}$\!\!$\lisp}
\newcommand*{\cl}{Common Lisp}
\newcommand*{\interlisp}{{\small I}{\scriptsize nter}$\!\!$\lisp}
\newcommand*{\clos}{{\small CLOS}}
\newcommand*{\ools}{object-oriented languages}
\newcommand*{\Cpp}{C\raise.22ex\hbox{+}\raise.22ex\hbox{+}}
\newcommand*{\youtoo}{Youtoo}

% ------------------------------------------------------------------------------
%%% General typesetting syntax

\newcommand*{\theclass}[1]{{\tt{}<#1>}}
\newcommand*{\nil}{\syntaxref{()}}
\newcommand*{\true}{\constantref{t}}
\newcommand*{\Ra}{$\Rightarrow$}
\newcommand*{\ra}{$\rightarrow$}
\newcommand*{\eg}{{\em e.g.\ }}
\newcommand*{\ie}{{\em i.e.\ }}

% ------------------------------------------------------------------------------
%%% Index typesetting

% Command to set the font of a particular page number in the index to emphatic
%\newcommand*{\hyperem}[1]{{\bfseries\em\def\@linkcolor{blue}\hyperpage{#1}}}

% Command to set the colour of a particular page number in the index to blue
\newcommand*{\hyperem}[1]{{\def\@linkcolor{blue}\hyperpage{#1}}}

\newcommand*{\ttindexlabel}[1]{#1@{\tt #1}}

% Add a \tt entry to the general index, e.g. and language operator
\newcommand*{\ttindex}[1]{\index{general}{\ttindexlabel{#1}}}

% Add a language operator, function, etc. definition
% to the general index with the page number in emphatic
\newcommand*{\ttindexdef}[1]{\index{general}{\ttindexlabel{#1}|hyperem}}

\newcommand*{\ttsubindex}[2]{\index{general}{\ttindexlabel{#1}!#2}}

\newcommand*{\undefmod}{undefined-module}
\newcommand*{\module}{\undefmod}

\newcommand*{\indexfunc}[1]{\index{function}{#1@{\tt{}#1} (\module)}}
\newcommand*{\indexmeth}[1]{\index{method}{#1@{\tt{}#1} (\module)}}
\newcommand*{\indexcondition}[1]{\index{condition}{#1@{\tt{}#1} (\module)}}
\newcommand*{\indexmodule}[1]{\index{module}{#1@{\tt{}#1} (\module)}}

\renewcommand{\printindex}[2]
{%
    \newpage%
    \twocolumn[{\Large\bf #2 \vskip4ex}]%
    \refstepcounter{clause}%
    \tocskip{\tocentryskip}%
    \addcontentsline{toc}{index}{#2}%
    \input{#1.ind}%
}

% ------------------------------------------------------------------------------
%%% Module clause

\newcommand{\defModule}[2]
{%
    \sclause{#2}
    \label{#1}
    \index{general}{#1}
    \index{general}{#1!module}
    \indexmodule{#1}
    \gdef\module{#1}
}

% ------------------------------------------------------------------------------
%%% Entry clause

\newcounter{entryclause}[sclause]
\renewcommand{\theentryclause}{\thesclause.\arabic{entryclause}}
\newcommand{\l@entryclause}{\@gobbletwo}
\newcommand{\entryclausemark}[1]{}

\def\@entrysect#1#2#3#4#5#6[#7]#8#9{%
    \vbox%
    {%
        \vskip6pt\vfil\hrule height.3mm%
        \settowidth{\@tempdima}{{\normalsize\bf A.14.44444}{{\tt #8}}{{\em #9}}}%
        \ifthenelse{\lengthtest{\@tempdima > \linewidth}}%
        {%
            \orig@sect{#1}{#2}{#3}{#4}{#5}{#6}[#7]%
            {\hbox{#8}\hfill\\\hbox{}\hfill\hbox{#9\,}}%
        }%
        {%
            \orig@sect{#1}{#2}{#3}{#4}{#5}{#6}[#7]%
            {\hbox{#8}\hfill\hbox{#9\,}}%
        }%
        \vskip8pt\vfil\hrule height.3mm%
    }%
}

\newcommand{\entryclause}[3]
{%
    \let\orig@sect=\@sect%
    \let\@sect=\@entrysect%
    \@startsection{entryclause}{3}%
    {\z@}%
    {2ex plus 1ex minus .2ex}%
    {.1ex plus .1ex}%
    {\normalsize\bf}%
    {{\tt #1}}{{\em #2}{#3}}%
    \let\@sect=\orig@sect%
    \vskip -5pt%
}

\newcommand{\derivedentryclause}[4]
{%
    \let\orig@sect=\@sect%
    \let\@sect=\@entrysect%
    \@startsection{entryclause}{3}%
    {\z@}%
    {2ex plus 1ex minus .2ex}%
    {.1ex plus .1ex}%
    {\normalsize\bf}%
    {{\tt #1}}{{\tt #2}\ \ {\em #3}{#4}}%
    \let\@sect=\orig@sect%
    \vskip -5pt%
}

% ------------------------------------------------------------------------------
%%% Entry sub-clauses

%%%  function
\newcommand*{\functionlabel}[1]{function:#1}
\newcommand{\functionlabeled}[2]
{%
    \entryclause{#1}{function}%
    {%
        \label{\functionlabel{#2}}%
        \ttindexdef{#1}%
        \indexfunc{#1}%
    }%
}
\newcommand*{\function}[1]
{%
    \functionlabeled{#1}{#1}%
}
\newcommand*{\functionref}[1]{\hyperref[\functionlabel{#1}]{{\tt #1}}}
\newcommand*{\functionreflabel}[2]{\hyperref[\functionlabel{#2}]{{\tt #1}}}

%%%  Setter function
\newcommand*{\setterlabel}[1]{setter:#1}
\newcommand{\setter}[1]
{%
    \entryclause{(setter #1)}{setter}
    {%
        \label{\setterlabel{#1}}%
        \index{general}{setter#1@{\tt{}(setter #1)}}%
        \index{function}{setter#1@{\tt{}(setter #1)} (\module)}%
    }%
}
\newcommand*{\setterref}[1]{\hyperref[\setterlabel{#1}]{{\tt #1}}}

%%%  Converter function
\newcommand*{\converterlabel}[1]{converter:#1}
\newcommand{\converter}[1]
{%
    \entryclause{(converter <#1>)}{converter}
    {%
        \label{\converterlabel{#1}}%
        \index{general}{converter#1@{\tt{}(converter <#1>)}}%
        \index{method}{converter#1@{\tt{}(converter <#1>)} (\module)}
    }%
}
\newcommand*{\converterref}[1]{\hyperref[\converterlabel{#1}]{{\tt <#1>}}}

%%%  Generic function
\newcommand*{\genericlabel}[1]{generic:#1}
\newcommand{\genericlabeled}[2]
{%
    \entryclause{#1}{generic function}
    {%
        \label{\genericlabel{#2}}%
        \ttindexdef{#1}%
        \index{generic}{#1@{\tt{}#1}}%
        \index{generic}{#1@{\tt{}#1}!{\tt{}defgeneric} (\module)}%
    }%
}
\newcommand*{\generic}[1]
{%
    \genericlabeled{#1}{#1}%
}
\newcommand*{\genericref}[1]{\hyperref[\genericlabel{#1}]{{\tt #1}}}
\newcommand*{\genericreflabel}[2]{\hyperref[\genericlabel{#2}]{{\tt #1}}}

%%%  Method
\newcommand*{\methodlabel}[1]{method:#1}
\newcommand{\method}[2]
{%
    \entryclause{#1 <#2>}{method}
    {%
        \label{\methodlabel{#1#2}}%
        \ttindex{#1}%
        %\indexmeth{#1}%
        \index{generic}{#1@{\tt{}#1}!#2@{\tt{}defmethod #2} (\module)}%
    }%
}
\newcommand*{\methodref}[2]{\hyperref[\methodlabel{#1#2}]{{\tt #1 <#2>}}}

%%%  Syntax form
\newcommand*{\syntaxlabel}[1]{syntax:#1}
\newcommand{\syntaxform}[1]
{%
    \entryclause{#1}{syntax}
    {%
        \label{\syntaxlabel{#1}}%
        \ttindexdef{#1}%
        \index{special}{#1@{\tt{}#1} (\module)}%
    }%
}
\newcommand*{\syntaxref}[1]{\hyperref[\syntaxlabel{#1}]{{\tt{}#1}}}

%%%  Special operator
\newcommand*{\specoplabel}[1]{specop:#1}
\newcommand{\specop}[1]
{%
    \entryclause{#1}{special operator}
    {%
        \label{\specoplabel{#1}}%
        \ttindexdef{#1}%
        \index{special}{#1@{\tt{}#1} (\module)}%
    }%
}
\newcommand*{\specopref}[1]{\hyperref[\specoplabel{#1}]{{\tt{}#1}}}

%%%  Defining operator
\newcommand*{\defoplabel}[1]{defop:#1}
\newcommand{\defop}[1]
{%
    \entryclause{#1}{defining operator}
    {%
        \label{\defoplabel{#1}}%
        \ttindexdef{#1}%
        \index{special}{#1@{\tt{}#1} (\module)}%
    }%
}
\newcommand*{\defopref}[1]{\hyperref[\defoplabel{#1}]{{\tt{}#1}}}

%%%  Constant
\newcommand*{\constantlabel}[1]{constant:#1}
\newcommand{\constant}[2]
{%
    \entryclause{#1 \classref{#2}}{constant}
    {%
        \label{\constantlabel{#1}}%
        \ttindexdef{#1}%
        \index{constant}{#1@{\tt{}#1} (\module)}%
        \index{general}{constant!#1}
    }%
}
\newcommand*{\constantref}[1]{\hyperref[\constantlabel{#1}]{{\tt{}#1}}}

%%% Class alias
\newcommand{\classalias}[2]
{%
    \entryclause{<#1> \classref{#2}}{constant}
    {%
        \label{\constantlabel{#1}}%
        \index{general}{#1@{\tt <#1>}|hyperem}%
        \index{constant}{#1@{\tt{}<#1>} (\module)}%
    }%
}

%%%  Class
\newcommand*{\classlabel}[1]{class:#1}
\newcommand{\class}[1]
{%
    \entryclause{<#1>}{class}
    {%
        \label{\classlabel{#1}}%
        \index{general}{#1@{\tt <#1>}|hyperem}%
        \index{class}{#1@{\tt{}<#1>} (\module)}%
    }%
}
\newcommand*{\classref}[1]{\hyperref[\classlabel{#1}]{{\tt{}<#1>}}}

%%%  Derived class
\newcommand{\derivedclass}[2]
{%
    \derivedentryclause{<#1>}{\classref{#2}}{class}
    {%
        \label{\classlabel{#1}}%
        \index{general}{#1@{\tt <#1>}|hyperem}%
        \index{class}{#1@{\tt{}<#1>} (\module)}%
    }
}

%%%  Instance
\newcommand*{\instancelabel}[1]{instance:#1}
\newcommand{\instance}[2]
{
    \entryclause{#1 \classref{#2}}{instance}
    {%
        \label{\instancelabel{#1}}%
        \ttindexdef{#1}%
    }%
}
\newcommand*{\instanceref}[1]{\hyperref[\instancelabel{#1}]{{\tt{}#1}}}

%%%  Condition
\newcommand*{\conditionlabel}[1]{condition:#1}
\newcommand{\condition}[2]
{%
    \derivedentryclause{<#1>}{\conditionref{#2}}{condition}
    {%
        \label{\conditionlabel{#1}}%
        \indexcondition{#1}%
    }%
}
\newcommand*{\conditionref}[1]{\hyperref[\conditionlabel{#1}]{{\tt{}<#1>}}}

%%%  Keyword
\newcommand*{\keywordlabel}[1]{keyword:#1}
\newcommand{\keyworddef}[1]
{%
    {\tt #1}%
    \label{\keywordlabel{#1}}%
    \ttindexdef{#1}%
    % \index{keyword}{#1@{\tt{}#1} (\module)}%
    \index{general}{keyword!#1}
}
\newcommand*{\keywordref}[1]{\hyperref[\keywordlabel{#1}]{{\tt{}#1}}}

%%%  Result
\newcommand*{\result}{\syntaxssclause*{\syntaxssclausefont Result}\vskip -8pt}

%%%  Remarks
\newcommand*{\remarks}{\syntaxssclause*{\syntaxssclausefont Remarks}\vskip -8pt}

%%%  Examples
\newcommand*{\examples}{\syntaxssclause*{\syntaxssclausefont Examples}\vskip -8pt}

%%%  See also
\renewcommand*{\seealso}{\syntaxssclause*{\syntaxssclausefont See~also}\vskip -8pt}

% ------------------------------------------------------------------------------
%%% Syntax

\newcounter{syntaxssclause}[entryclause]
\renewcommand*{\thesyntaxssclause}{\theentryclause.\arabic{syntaxssclause}}
\newcommand*{\l@syntaxssclause}{\@gobbletwo}
\newcommand*{\syntaxssclausemark}[1]{}
\newcommand{\syntaxssclause}
{%
    \@startsection{syntaxssclause}{4}{\z@}%
    {1ex}%
    {0.1ex}%
    {\normalfont\normalsize\bfseries}%
}

% \newcommand*{\syntaxssclausefont}{\mdseries}
\newcommand*{\syntaxssclausefont}{\normalfont\small\bfseries$\!$}

\newcommand*{\Syntax}
{%
    \syntaxssclause{\syntaxssclausefont Syntax}%
    \vskip -8pt%
}

%%%  Syntax box

\newcommand*{\defSyntax}[1]{\expandafter\def\csname #1 Syntax\endcsname}

\newenvironment{syntax}
{%
    \begin{minipage}{\linewidth}%
        \tt%
        \begin{tabbing}%
            000000\=00\=00\=0000000000000000000000000000000\=\kill%
        }%
        {%
        \end{tabbing}%
    \end{minipage}%
}

\newcommand{\syntaxBox}[1]
{%
    \framebox[\linewidth][l]%
    {%
        \usebox{#1}%
    }%
}

\newcommand{\showSyntaxBox}[1]
{%
    \ttsubindex{#1}{syntax table}%
    %\index{general}{syntax tables!#1@{\tt #1}}%
    \framebox[\linewidth][l]{\csname #1 Syntax\endcsname}%
}

\newcommand{\showSyntax}[1]
{%
    \let\orig@scdef=\scdef%
    \let\scdef=\scref%
    \makebox[\linewidth][l]{\csname #1 Syntax\endcsname}%
    \let\scdef=\orig@scdef%
}

%%%  Syntax category macros with hyper-referencing

\renewcommand*{\sc}[1]{{\normalfont\em{}#1}}

\newcommand*{\scopt}[1]{\sc{#1$_{opt}$}}
\newcommand*{\scseq}[1]{\sc{#1$^{*}$}}
\newcommand*{\scSeq}[1]{\sc{#1$^{+}$}}

\newcommand*{\scgopt}[1]{\scopt{\{#1\}}}
\newcommand*{\scgseq}[1]{\scseq{\{#1\}}}
\newcommand*{\scgSeq}[1]{\scSeq{\{#1\}}}

\newcommand*{\sclabel}[1]{sc:#1}
\newcommand{\scdef}[1]
{%
    \sc{#1}%
    \label{\sclabel{#1}}%
    %\ttindex{#1}\index{general}{syntax category!#1}%
}
\newcommand*{\scref}[1]{\hyperref[\sclabel{#1}]{\sc{#1}}}
\newcommand*{\scoptref}[1]{\hyperref[\sclabel{#1}]{\scopt{#1}}}
\newcommand*{\scseqref}[1]{\hyperref[\sclabel{#1}]{\scseq{#1}}}
\newcommand*{\scSeqref}[1]{\hyperref[\sclabel{#1}]{\scSeq{#1}}}

% ------------------------------------------------------------------------------
%%% Function Signature

\newcommand*{\Signature}
{%
    \syntaxssclause{\syntaxssclausefont Signature}%
    \vskip -8pt%
}

\newcommand*{\defSignature}[1]{\expandafter\def\csname #1 Signature\endcsname}

\newenvironment{signature}
{%
    \begin{minipage}{\linewidth}%
    \tt%
    \begin{tabbing}%
    00\=00\=00\=00\=\kill%
}%
{%
    \end{tabbing}%
    \end{minipage}%
}

\newcommand{\showSignatureBox}[1]
{%
    \ttsubindex{#1}{function signature}%
    \index{general}{function signatures!#1@{\tt #1}}%
    \framebox[\linewidth][l]{\csname #1 Signature\endcsname}
}

\newcommand{\showSignature}[1]{\csname #1 Signature\endcsname}

% ------------------------------------------------------------------------------
%%% Rewrite-rules

\newcommand*{\rewriterules}{\syntaxssclause{\syntaxssclausefont Rewrite Rules}}

\newenvironment{RewriteTable}[2]
{%
    \ttsubindex{#1}{rewrite rules}%
    \index{general}{rewrite rules!#1@{\tt #1}}%
    \begin{tabular}{#2}%
}
{%
    \end{tabular}%
}

\newcommand*{\rewrite}{{$\equiv$}}
\newcommand*{\tts}{{\tt\phantom{00}}}

% ------------------------------------------------------------------------------
%%% Syntax Description Sub-clauses
%%%  Arguments

\def\argrelax#1,{\relax}

\def\choiceaux#1,#2,{\ifx#2\thend #1\let\next=\argrelax
    \else #1 $|$\let\next=\choiceaux\fi \next#2,}

\newcommand{\choice}[1]
{%
    {\rm \{}\choiceaux#1,\thend,{\rm \}}%
}

\def\oneofaux#1,#2,{\ifx#2\thend #1\let\next=\argrelax
    \else #1 $|$\let\next=\oneofaux\fi \next#2,}

\newcommand*{\oneof}[1]{\oneofaux#1,\thend,}
\newcommand*{\optional}[1]{{#1}$_{opt}$}
\newcommand*{\group}[1]{{\tt(}#1\/{\tt)}}

% Wrap the quote environment macros so that it can be switched-off for TeX4ht
\newcommand*{\optionsquote}{\begin{quote}}
\newcommand*{\stopoptionsquote}{\end{quote}}

\newcommand*{\argumentlabel}[1]{{\it #1}\thinspace:}
\newenvironment{arguments}
{%
    \syntaxssclause*{\syntaxssclausefont Arguments}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\argumentlabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

%%%  Generic arguments

%\def\genargshelper#1,#2,{\ifx#2\thend\let\next=\relax{{\it{}#1}\thinspace:}
%    \else\let\next=\argrelax{\tt({\it{}#1}{}#2)}\thinspace:\fi\next}
\def\genargshelper#1,#2,{\ifx#2\thend\let\next=\relax{{\it{}#1}\thinspace:}
    \else\let\next=\argrelax{\tt{\it{}#1}{}#2}\thinspace:\fi\next}
\newcommand*{\genargslabel}[1]{\genargshelper#1,\thend,}
\newenvironment{genericargs}
{%
    \syntaxssclause*{\syntaxssclausefont Generic Arguments}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\genargslabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

%%%  Specialized Arguments

\newenvironment{specargs}
{%
    \syntaxssclause*{\syntaxssclausefont Specialized Arguments}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\genargslabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

%%%  Options

\def\optionhelper#1,#2,{{\tt{}#1}{\em{}#2}\thinspace:}
\newcommand{\optionlabel}[1]{\optionhelper#1,}
\newenvironment{initoptions}
{%
    \syntaxssclause*{\syntaxssclausefont Initialization Options}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\optionlabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}
\newenvironment{options}
{%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\optionlabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

%%%  Sub-classes

\newcommand*{\subclasslabel}[1]{{\tt{}<#1>}\thinspace:}
\newenvironment{subclasses}
{%
    % \syntaxssclause*{\syntaxssclausefont Sub-classes}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\subclasslabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

%%%  Accessor Functions

\newcommand*{\functionslabel}[1]{\indexfunc{#1}\ttindex{#1}{\tt{}#1}\thinspace:}
\newenvironment{functions}
{%
    % \syntaxssclause*{\syntaxssclausefont Sub-classes}%
    \optionsquote%
    \vskip -8pt%
    \list{}{\let\makelabel\functionslabel}%
}
{%
    \endlist%
    \stopoptionsquote%
}

% ------------------------------------------------------------------------------
%%% Example typesetting

\renewcommand*{\examplename}{Example}

\renewcommand{\theexample}
{%
    \ifnum\c@annex=0
    \arabic{example}%
    \else
    \theannex.\arabic{example}%
    \fi
}

\def\fnum@example{\examplename~\theexample}

\renewenvironment{example}
{%
    \stepcounter{yextra}%
    \refstepcounter{example}%
    \@setnoteparams%
}
{}

\newcommand{\l@example}[2]
{%
    \vskip \z@ \@plus.2\p@
    {%
        \leftskip 0em
        \rightskip \@tocrmarg
        \parfillskip -\rightskip
        \parindent 0em\@afterindenttrue
        \interlinepenalty\@M
        \leavevmode
        \@tempdima 2.75em
        \advance\leftskip \@tempdima \null\nobreak\hskip -\leftskip
        {\let\numberline\loftnumberline \normalfont\examplename{} #1}\nobreak
        \loftfillnum{#2}}
}

\newcommand*{\addtotoc}[3]
{%
    \addcontentsline{#1}{#2}
    {\protect\numberline{\csname the#2\endcsname}{\ignorespaces #3}}%
}

\newcommand{\examplecaption}[1]
{%
    \addtotoc{lof}{example}{#1}%
    \@makecaption{\fnum@example}{#1}%
}

%%%  EuLisp code typesetting macros

% Enable white-space counting?
{\obeyspaces\gdef\enablespaces{\obeyspaces\let \@xobeysp}}

\newcommand{\enabletex}
{%
    \relax%
    \def\[{\endgroup\begingroup\def\]{\endgroup\restart}}%
}

\newcommand{\enablemacros}{\catcode`\\=0\relax}
\newcommand{\disablemacros}{\catcode`\\=\other}

\newcommand*{\codefont}{\tt}
\newcommand*{\codecommentfont}{\it}

\newdimen\codeindent \codeindent=0.5cm%

\newcommand*{\codebeforehook}{\vskip4pt}
\newcommand*{\codebegineveryline}{\relax}
\newcommand*{\codeendeveryline}{\relax}
\newcommand*{\codeafterhook}{\vskip-5pt}

\newif\iffirstcodepar

\newcommand{\@@code}
{%
    \begingroup%
    \def\verbatimpar{\iffirstcodepar%
        \global\firstcodeparfalse\codebegineveryline\else%
        \codeendeveryline\@@par\leavevmode\codebegineveryline\fi}\relax%
    \def\endCodeExample{\codeendeveryline\endgroup\endCodeExample}\frenchspacing%
    \codeverbatim\enablespaces\disablecodecomment%
    \enabletex\disablebackslash\enablemacros%
    \codefont%
}

\newcommand{\codeExample}
{%
    \begingroup\codebeforehook%
    \let\restart=\@@code%
    \def\verbatimpar{\relax}\global\firstcodepartrue%
    \def\par{\verbatimpar}\obeylines%
    \def\endCodeExample{\@@par\codeafterhook\endgroup}\relax%
    \rightskip\z@\leftskip\@totalleftmargin%
    \advance\leftskip by\codeindent%
    \parindent\z@\parfillskip\@flushglue%
    \parskip\z@\itemsep=\z@\parsep=\z@\@@code%
}

% How to recognize comments that begin with a precise character
\newcommand*{\codecommentsign}{;}

{\catcode`\;=\active
    \gdef\enablecodecomment{\catcode`\;=\active
        \def;{\codecomment}}\relax
    \gdef\disablecodecomment{\catcode`\;=\other
        \def;{\codecommentsign}}}

\newcommand{\codecomment}
{%
    \endgroup\begingroup%
    \def\verbatimpar{\ifmmode$\fi\endgroup\restart\verbatimpar}\relax%
    \def\endCodeExample{\ifmmode$\fi\endgroup\endCodeExample}\relax%
    \codefont\codecommentsign\@codecomment%
}

% This is a special macro to handle sucessions of codecommentsign
\newcommand{\@codecomment}[1]
{%
    \relax%
    \if\codecommentsign#1\codecommentsign\let\temp=\@codecomment\else%
    \ifcat\space#1\let\temp=\@codecomment%
    \else\codecommentfont\let\temp=#1\fi\fi\temp%
}

\chardef\other=12\relax

\newcommand{\codeverbatim}
{%
    \relax%
    \edef\disablebackslash{\catcode`\noexpand\\=\the\catcode`\\}\relax
    \edef\endcodeverbatim{\relax
        \catcode`\noexpand\\=\the\catcode`\\\relax
        \catcode`\noexpand\ =\the\catcode`\ \relax
        \catcode`\noexpand\{=\the\catcode`\{\relax
        \catcode`\noexpand\}=\the\catcode`\}\relax
        \catcode`\noexpand\$=\the\catcode`\$\relax
        \catcode`\noexpand\&=\the\catcode`\&\relax
        \catcode`\noexpand\#=\the\catcode`\#\relax
        \catcode`\noexpand\%=\the\catcode`\%\relax
        \catcode`\noexpand\~=\the\catcode`\~\relax
        \catcode`\noexpand\_=\the\catcode`\_\relax
        \catcode`\noexpand\^=\the\catcode`\^\relax}\relax
    \let\do=\@makeother\do\\\do\ \do\{\do\}\do\$\do\&\do\#\do\%\do\~\do\_\do\^%
}

\newcommand*{\disablebackslash}{\apocaerror{No disablebackslash here}}

% ------------------------------------------------------------------------------
%%% Redefine the definitions environment
% Removed the spurious newline after the clause number

\renewenvironment{definitions}{%
    \setcounter{cl@level}{6}
    \ifnum\value{sssssclause}=0 \setcounter{cl@level}{5} \fi
    \ifnum\value{ssssclause}=0 \setcounter{cl@level}{4} \fi
    \ifnum\value{sssclause}=0 \setcounter{cl@level}{3} \fi
    \ifnum\value{ssclause}=0 \setcounter{cl@level}{2} \fi
    \ifnum\value{sclause}=0 \setcounter{cl@level}{1} \fi
    \ifnum\value{clause}=0 \setcounter{cl@level}{0} \fi
    \ifcase\value{cl@level} % 0, NOT YET IN A CLAUSE
    \ClassWarning{iso}{Definitions started before the initial clause}
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforecskip}
        \@afterindentfalse
        \refstepcounter{clause}
        {\raggedright\bfseries \theclause\ ##1\\}}
    \or % 1, called in a clause
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforescskip}
        \@afterindentfalse
        \refstepcounter{sclause}
        {\raggedright\bfseries \thesclause\ ##1\\}}
    \or % 2, called in an sclause
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforesscskip}
        \@afterindentfalse
        \refstepcounter{ssclause}
        {\raggedright\bfseries \thessclause\ ##1\\}}
    \or % 3, called in an ssclause
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforesscskip}
        \@afterindentfalse
        \refstepcounter{sssclause}
        {\raggedright\bfseries \thesssclause\ ##1\\}}
    \or % 4, called in an sssclause
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforesscskip}
        \@afterindentfalse
        \refstepcounter{ssssclause}
        {\raggedright\bfseries \thessssclause\ ##1\\}}
    \or % 5, called in an ssssclause
    \renewcommand{\@defcl}[1]{\setcounter{note}{0}\setcounter{example}{0}
        \par
        \addvspace{\beforesscskip}
        \@afterindentfalse
        \refstepcounter{sssssclause}
        {\raggedright\bfseries \thesssssclause\ ##1\\}}
    \else % 5+, called in an sssssclause or lower
    \ClassWarning{iso}{Definitions too deeply nested}
    \renewcommand{\@defcl}[1]{
        \par
        \addvspace{\beforesscskip}
        \@afterindentfalse
        \refstepcounter{sssssclause}
        {\raggedright\bfseries \thesssssclause\ ##1\\}}
    \fi}%
{}
\renewcommand{\definition}[2]{\@defcl{#1} #2}

%%%  Sub-definition
% Amalgam of subclause and definition to get the right level of numbering on
% the heading but no toc entry.

\newcounter{subdefinition}[entryclause]
\renewcommand*{\thesubdefinition}{\theclause .\arabic{subdefinition}}
\newcommand*{\l@subdefinition}{\@gobbletwo}
\newcommand*{\subdefinitionmark}[1]{}
\newcommand{\subdefinition}[1]
{%
    \@startsection{subdefinition}{3}{\z@}%
    {2ex plus 1ex minus .2ex}%
    {-.5em plus -.1em minus -.1em}%
    {\normalsize\bfseries}%
    {\protect{\normalsize\bfseries#1:\thinspace}}%
}

%%% ----------------------------------------------------------------------------
