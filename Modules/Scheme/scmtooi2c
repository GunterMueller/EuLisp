#!/bin/sh

## Copyright (c) 1997 by A Kind & University of Bath. All rights reserved.

## -----------------------------------------------------------------------
##                     EuLisp System 'youtoo'
## -----------------------------------------------------------------------
##  Description: Script to convert Scheme/libscheme.i to Vm/level1i.c
##  (should be a perl file in the future)
## -----------------------------------------------------------------------

ARCH=$1

FILE=scmtooi.c
FILE_SKL=../../Youtoo/Vm/level1i.skl.c
SOURCE_1=../../Lib.${ARCH}/libscheme.i
SOURCE_2=scmtoo.i

SOURCE_SYNTAX_1=scheme0.i
SOURCE_SYNTAX_2=scmtoo0.i

## -----------------------------------------------------------------------
echo .CREATING $FILE
cat $FILE_SKL > $FILE

## --------------------------------------------------------------------
## Create fill_level1_table
## --------------------------------------------------------------------

echo "void fill_level1_table() {" >> $FILE

echo "  eul_level1_lexical_module_name = \"scheme\";" >> $FILE
echo "  eul_level1_syntax_module_name = \"scheme0\";" >> $FILE

echo "  eul_level1_module_names = \"level1 string convert copy integer number fpi collect compare condition event thread dynamic let-cc callback telos boot1 boot mop-defcl mop-meth mop-gf mop-inspect mop-init mop-class mop-key mop-prim mop-access mop-alloc character float stream3 vector stream stream1 lock stream2 socket list format convert1 table1 table handler symbol read scheme scheme0\";" >> $FILE

grep "((name . " $SOURCE_1 | grep "(pos . " | grep -v "(class . ff)" | sed "s/ *((name \. /  eul_fast_table_set(level1_tab,\"/1" | sed "s/) (pos \. /\", make_entry(/1" | sed "s/) (origin /, \"/1" | sed "s/ \. /\", \"/1" | sed "s/).*/\"));/1" >> $FILE

grep "((name . " $SOURCE_2 | grep "(pos . " | grep -v "(class . ff)" | sed "s/ *((name \. /  eul_fast_table_set(level1_tab,\"/1" | sed "s/) (pos \. /\", make_entry(/1" | sed "s/) (origin /, \"/1" | sed "s/ \. /\", \"/1" | sed "s/).*/\"));/1" >> $FILE

echo "}" >> $FILE
echo >> $FILE

## --------------------------------------------------------------------
## Create fill_level1_syntax_table
## --------------------------------------------------------------------

echo "void fill_level1_syntax_table() {" >> $FILE

grep "((name . " $SOURCE_SYNTAX_1 | grep "(pos . " | sed "s/ *((name \. /  eul_fast_table_set(level1_syntax_tab,\"/1" | sed "s/) (pos \. /\", make_entry(/1" | sed "s/) (origin /, \"/1" | sed "s/ \. /\", \"/1" | sed "s/).*/\"));/1" >> $FILE

grep "((name . " $SOURCE_SYNTAX_2 | grep "(pos . " | sed "s/ *((name \. /  eul_fast_table_set(level1_syntax_tab,\"/1" | sed "s/) (pos \. /\", make_entry(/1" | sed "s/) (origin /, \"/1" | sed "s/ \. /\", \"/1" | sed "s/).*/\"));/1" >> $FILE

echo "}" >> $FILE
echo >> $FILE

echo "/* eof */" >> $FILE


echo .DONE
