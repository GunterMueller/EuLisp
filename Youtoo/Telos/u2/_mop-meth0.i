;;; EuLisp system 'youtoo'
;;;   Interface file for module _mop-meth0

(definterface _mop-meth0
  (import (level-1)
   syntax (boot0)
   full-import (symbol stream3 random handler read table table1 vector convert1 format list socket stream2 lock stream1 stream float character compare collect fpi number integer copy convert string callback let-cc dynamic thread event condition bit mop-alloc mop-access mop-prim mop-key mop-class mop-init mop-inspect mop-gf mop-meth mop-defcl boot boot1 telos level-1)
   export (
    ((name . defmethod-sig) (pos . 8) (origin _mop-meth0 . defmethod-sig))
    ((name . defmethod-body) (pos . 7) (origin _mop-meth0 . defmethod-body))
    ((name . defmethod-args) (pos . 2) (origin _mop-meth0 . defmethod-args))
    ((name . defmethod-domain) (pos . 4) (origin _mop-meth0 . defmethod-domain))
    ((name . named-method-function-lambda) (pos . 10) (origin _mop-meth0 . named-method-function-lambda))
    ((name . defmethod) (pos . 5) (origin _mop-meth0 . defmethod))
    ((name . method-lambda) (pos . 3) (origin _mop-meth0 . method-lambda))
    ((name . method-function-lambda) (pos . 6) (origin _mop-meth0 . method-function-lambda))
    ((name . defmethod-keywords) (pos . 9) (origin _mop-meth0 . defmethod-keywords))
   )
   local-literals (
    (defmethod-args . 45)
    (method-lambda . 44)
    (defmethod-domain . 43)
    (defmethod . 42)
    (defmethod-body . 41)
    (defmethod-sig . 40)
    (defmethod-keywords . 39)
    (named-lambda . 37)
    (method . 36)
    (lambda . 31)
    (progn . 30)
    (stable-add-method . 28)
    (append . 27)
    (generic-function-method-keywords . 26)
    (named-method-function-lambda . 25)
    (generic-function-method-class . 24)
    ((class:) . 23)
    ((absent) . 22)
    (absent . 21)
    (make-method . 18)
    (list . 17)
    (method-function-lambda . 16)
    (make-vector . 15)
    (<simple-method> . 14)
    ((class:) . 13)
    (class: . 12)
   )
   literals (
   )
))
