;;; EuLisp system 'youtoo'
;;;   Interface file for module boot1

(definterface boot1
  (import ()
   syntax (_boot0)
   full-import ()
   export (
    ((name . stdout) (pos) (origin boot1 . stdout) (class . constant) (value 1))
    ((name . system) (pos . 50) (origin boot1 . system))
    ((name . equal) (pos . 49) (origin boot1 . equal))
    ((name . simple-generic-function?) (pos . 48) (origin boot1 . simple-generic-function?) (inline (G0059 (gfp))))
    ((name . write-object) (pos) (origin boot1 . write-object) (class . opencoding) (arity . 2) (opencoding (write-object)))
    ((name . *absent*) (pos . 47) (origin boot1 . *absent*) (class . constant))
    ((name . dec) (pos . 46) (origin boot1 . dec) (inline (G0084 (fpi-dec))))
    ((name . cons?) (pos . 43) (origin boot1 . cons?) (inline (G0051 (consp))))
    ((name . symbolp) (pos . 44) (origin boot1 . symbolp) (inline (G0045 (symbolp))))
    ((name . <) (pos . 42) (origin boot1 . <) (inline (G0078 (fpi-lt))))
    ((name . eql) (pos . 45) (origin boot1 . eql) (inline (G0037 (eql))))
    ((name . setter) (pos . 41) (origin boot1 . setter))
    ((name . mod) (pos . 40) (origin boot1 . mod) (inline (G0076 (fpi-remainder))))
    ((name . make-vector) (pos . 39) (origin boot1 . make-vector))
    ((name . object?) (pos . 38) (origin boot1 . object?))
    ((name . prin) (pos . 37) (origin boot1 . prin))
    ((name . atom?) (pos . 36) (origin boot1 . atom?) (inline (G0063 (consp) (null))))
    ((name . cdr) (pos . 35) (origin boot1 . cdr) (inline (G0092 (cdr))) (setter (G00106 (set-cdr))))
    ((name . make-vector1) (pos . 56) (origin boot1 . make-vector1) (class . ff) (arity . 2) (ff (0 8) 6 (eul_make_vector . ff_stub_eul_make_vector263)))
    ((name . *) (pos . 34) (origin boot1 . *) (inline (G0070 (fpi-product))))
    ((name . character?) (pos . 33) (origin boot1 . character?) (inline (G0041 (characterp))))
    ((name . %) (pos . 32) (origin boot1 . %) (inline (G0074 (fpi-remainder))))
    ((name . int-zerop) (pos . 31) (origin boot1 . int-zerop) (inline (G0088 (fpi-zerop))))
    ((name . stderr) (pos) (origin boot1 . stderr) (class . constant) (value 2))
    ((name . make-symbol) (pos . 54) (origin boot1 . make-symbol) (class . ff) (arity . 1) (ff (3) 6 (eul_make_symbol . ff_stub_eul_make_symbol261)))
    ((name . member1-string) (pos . 53) (origin boot1 . member1-string) (class . ff) (arity . 2) (ff (1 3) 6 (eul_str_member1 . ff_stub_eul_str_member1260)))
    ((name . int-as-character) (pos) (origin boot1 . int-as-character) (class . opencoding) (arity . 1) (opencoding (fpi-as-character)))
    ((name . int?) (pos . 30) (origin boot1 . int?) (inline (G0055 (fpip))))
    ((name . tailstring) (pos . 52) (origin boot1 . tailstring) (class . ff) (arity . 2) (ff (3 0) 3 (eul_tailstr . ff_stub_eul_tailstr259)))
    ((name . car) (pos . 29) (origin boot1 . car) (inline (G0090 (car))) (setter (G00104 (set-car))))
    ((name . *argc*) (pos . 28) (origin boot1 . *argc*) (class . constant))
    ((name . time-start) (pos . 27) (origin boot1 . time-start))
    ((name . *argv*) (pos . 26) (origin boot1 . *argv*) (class . constant))
    ((name . list) (pos . 25) (origin boot1 . list))
    ((name . character-as-int) (pos) (origin boot1 . character-as-int) (class . opencoding) (arity . 1) (opencoding (character-as-fpi)))
    ((name . time-stop) (pos . 24) (origin boot1 . time-stop))
    ((name . symbol?) (pos . 23) (origin boot1 . symbol?) (inline (G0047 (symbolp))))
    ((name . inc) (pos . 21) (origin boot1 . inc) (inline (G0082 (fpi-inc))))
    ((name . eq) (pos . 22) (origin boot1 . eq) (inline (G0035 (eq))))
    ((name . exit) (pos . 20) (origin boot1 . exit))
    ((name . getenv) (pos . 19) (origin boot1 . getenv))
    ((name . format1) (pos . 18) (origin boot1 . format1))
    ((name . string-size) (pos . 17) (origin boot1 . string-size) (inline (G0096 (primitive-size))))
    ((name . string?) (pos . 16) (origin boot1 . string?) (inline (G0043 (stringp))))
    ((name . substring) (pos . 51) (origin boot1 . substring) (class . ff) (arity . 3) (ff (3 0 0) 3 (eul_substr . ff_stub_eul_substr258)))
    ((name . -) (pos . 15) (origin boot1 . -) (inline (G0068 (fpi-difference))))
    ((name . +) (pos . 14) (origin boot1 . +) (inline (G0066 (fpi-sum))))
    ((name . make-keyword) (pos . 55) (origin boot1 . make-keyword) (class . ff) (arity . 1) (ff (3) 6 (eul_make_keyword . ff_stub_eul_make_keyword262)))
    ((name . consp) (pos . 13) (origin boot1 . consp) (inline (G0049 (consp))))
    ((name . /) (pos . 12) (origin boot1 . /) (inline (G0072 (fpi-quotient))))
    ((name . =) (pos . 11) (origin boot1 . =) (inline (G0080 (fpi-equal))))
    ((name . null?) (pos . 10) (origin boot1 . null?) (inline (G0039 (null))))
    ((name . string-ref) (pos . 9) (origin boot1 . string-ref) (inline (G0098 (string-ref))) (setter (G00108 (set-string-ref))))
    ((name . vector-size) (pos . 8) (origin boot1 . vector-size) (inline (G00100 (primitive-size))))
    ((name . vector-ref) (pos . 7) (origin boot1 . vector-ref) (inline (G00102 (primitive-ref))) (setter (G00110 (set-primitive-ref))))
    ((name . list?) (pos . 5) (origin boot1 . list?) (inline (G0061 (listp))))
    ((name . simple-function?) (pos . 4) (origin boot1 . simple-function?) (inline (G0057 (lambdap))))
    ((name . print) (pos . 3) (origin boot1 . print))
    ((name . cons) (pos . 2) (origin boot1 . cons) (inline (G0094 (cons))))
   )
   local-literals (
    (top-level . 169)
    (cons . 168)
    (print . 167)
    (simple-function? . 166)
    (list? . 165)
    (set-setter . 164)
    (vector-ref . 163)
    (vector-size . 162)
    (string-ref . 161)
    (null? . 160)
    (= . 159)
    (/ . 158)
    (consp . 157)
    (+ . 156)
    (- . 155)
    (string? . 154)
    (string-size . 153)
    (format1 . 152)
    (getenv . 151)
    (exit . 150)
    (inc . 149)
    (eq . 148)
    (symbol? . 147)
    (time-stop . 146)
    (list . 145)
    (time-start . 144)
    (car . 143)
    (int? . 142)
    (int-zerop . 141)
    (% . 140)
    (character? . 139)
    (* . 138)
    (cdr . 137)
    (atom? . 136)
    (prin . 135)
    (object? . 134)
    (make-vector . 133)
    (mod . 132)
    (setter . 131)
    (< . 130)
    (cons? . 129)
    (symbolp . 128)
    (eql . 127)
    (dec . 126)
    (simple-generic-function? . 125)
    (equal . 124)
    (system . 123)
    (anonymous . 91)
    ("
" . 74)
    (|(setter vector-ref)| . 71)
    (|(setter string-ref)| . 70)
    (|(setter cdr)| . 69)
    (|(setter car)| . 68)
    ((*absent*) . 67)
    (*absent* . 66)
   )
   literals (
   )
))
