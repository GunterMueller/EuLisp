;;; EuLisp system 'youtoo'
;;;   Interface file for module i-all

(definterface i-all
  (import (i-level1 i-param i-error i-notify)
   syntax ()
   full-import (aux-table level1 telos mop-defcl mop-meth mop-gf mop-inspect mop-init mop-class mop-key mop-prim mop-access mop-alloc bit condition event thread dynamic let-cc callback string convert copy integer number fpi collect compare character float stream stream1 lock stream2 socket list format convert1 vector table1 table read handler random stream3 symbol boot boot1 i-level1 i-param i-notify i-error)
   export (
    ((name . >=) (pos . 11) (origin compare . >=))
    ((name . character-as-string) (pos . 11) (origin character . character-as-string))
    ((name . binary-gcd) (pos . 25) (origin number . binary-gcd))
    ((name . bit-xor) (pos . 6) (origin bit . bit-xor))
    ((name . simple-generic-function?) (pos . 48) (origin boot1 . simple-generic-function?) (inline (G0053 (gfp))))
    ((name . member1-list) (pos . 30) (origin boot . member1-list) (inline (G00141 (static-ref-nil) (memq))))
    ((name . compute-primitive-writer-using-class) (pos . 13) (origin mop-access . compute-primitive-writer-using-class))
    ((name . pop-dynamic-variables) (pos . 8) (origin dynamic . pop-dynamic-variables))
    ((name . init-list-ref) (pos . 29) (origin boot . init-list-ref))
    ((name . <semaphore>) (pos . 8) (origin lock . <semaphore>) (class . constant))
    ((name . delete) (pos . 26) (origin collect . delete))
    ((name . file-stream?) (pos . 49) (origin stream2 . file-stream?))
    ((name . sprin-one-char) (pos . 25) (origin stream . sprin-one-char))
    ((name . restore-thread-state) (pos) (origin thread . restore-thread-state) (class . opencoding) (arity . 2) (opencoding (restore-thread-state)))
    ((name . table-fill-value) (pos . 17) (origin table1 . table-fill-value) (inline (G007814 (static-ref2) (binding-ref ? <table>) (primitive-relative-ref))))
    ((name . <ct-error>) (pos . 5) (origin i-error . <ct-error>) (class . constant))
    ((name . primitive-format) (pos . 47) (origin boot1 . format))
    ((name . string-stream-string-list) (pos . 48) (origin stream2 . string-stream-string-list) (inline (G005239 (static-ref0) (binding-ref ? <string-stream>) (primitive-relative-ref))) (setter (G005265 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <string-stream>) (set-primitive-relative-ref) (nobble 2))))
    ((name . compute-slot-reader) (pos . 12) (origin mop-access . compute-slot-reader))
    ((name . reverse-list) (pos . 25) (origin boot . reverse-list))
    ((name . class-instance-length) (pos . 74) (origin mop-class . class-instance-length) (inline (G00710 (static-ref1) (primitive-ref))) (setter (G00770 (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . condition?) (pos . 7) (origin condition . condition?))
    ((name . special-tokens) (pos . 30) (origin read . special-tokens) (class . constant))
    ((name . any?) (pos . 24) (origin collect . any?))
    ((name . <string-stream>) (pos . 45) (origin stream2 . <string-stream>) (class . constant))
    ((name . <string>) (pos . 13) (origin string . <string>) (class . constant))
    ((name . string-as-int) (pos . 22) (origin string . string-as-int) (class . ff) (arity . 1) (ff (3) 0 (atoi . ff_stub_atoi2793)))
    ((name . make-vector1) (pos . 56) (origin boot1 . make-vector1) (class . ff) (arity . 2) (ff (0 8) 6 (eul_make_vector . ff_stub_eul_make_vector246)))
    ((name . make-space) (pos . 24) (origin stream . make-space))
    ((name . class-direct-superclasses) (pos . 69) (origin mop-class . class-direct-superclasses) (inline (G00712 (static-ref2) (primitive-ref))) (setter (G00772 (stack-ref 1) (static-ref2) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . warning) (pos . 22) (origin boot . warning))
    ((name . <collection>) (pos . 22) (origin collect . <collection>) (class . constant))
    ((name . from-stream) (pos . 46) (origin stream2 . from-stream))
    ((name . compute-discriminating-function) (pos . 12) (origin mop-meth . compute-discriminating-function))
    ((name . simple-function-code) (pos . 66) (origin mop-class . simple-function-code))
    ((name . permute) (pos . 17) (origin vector . permute))
    ((name . access-table-clear) (pos . 9) (origin aux-table . access-table-clear))
    ((name . generic-connect) (pos . 44) (origin stream2 . generic-connect))
    ((name . slotp) (pos . 13) (origin mop-inspect . slotp))
    ((name . parse) (pos . 28) (origin read . parse))
    ((name . element) (pos . 20) (origin collect . element))
    ((name . read-token) (pos . 27) (origin read . read-token))
    ((name . O_EXCL) (pos . 12) (origin stream1 . O_EXCL) (class . constant))
    ((name . simple-thread?) (pos . 39) (origin thread . simple-thread?))
    ((name . *C-ld*) (pos . 65) (origin i-param . *C-ld*))
    ((name . *inline-level*) (pos . 64) (origin i-param . *inline-level*))
    ((name . member1-string) (pos . 53) (origin boot1 . member1-string) (class . ff) (arity . 2) (ff (1 3) 6 (eul_str_member1 . ff_stub_eul_str_member1243)))
    ((name . <metaclass>) (pos . 62) (origin mop-class . <metaclass>) (class . constant))
    ((name . thread-returned?) (pos . 38) (origin thread . thread-returned?) (inline (G00237 (static-ref1) (binding-ref ? <simple-thread>) (primitive-relative-ref))) (setter (G00257 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <simple-thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . unquote-splicing-mark) (pos . 26) (origin read . unquote-splicing-mark) (class . constant))
    ((name . socket-host) (pos . 11) (origin socket . socket-host) (inline (G005772 (static-ref2) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G005784 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . generic-function-domain) (pos . 60) (origin mop-class . generic-function-domain) (inline (G00732 (static-ref1) (primitive-ref))) (setter (G00792 (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . sf-size) (pos) (origin mop-class . sf-size) (class . constant) (value 5))
    ((name . eul_make_socket) (pos . 21) (origin stream1 . eul_make_socket) (class . ff) (arity . 3) (ff (3 3 0) 0 (eul_make_socket . ff_stub_eul_make_socket4749)))
    ((name . ct-reset) (pos . 63) (origin i-param . ct-reset))
    ((name . random-seed) (pos . 5) (origin random . random-seed))
    ((name . int-binary-) (pos . 16) (origin boot1 . -) (inline (G0062 (fpi-difference))))
    ((name . stream?) (pos . 40) (origin stream2 . stream?))
    ((name . sprin) (pos . 23) (origin stream . sprin))
    ((name . find-key) (pos . 2) (origin mop-key . find-key))
    ((name . table-entries) (pos . 16) (origin table1 . table-entries) (inline (G007816 (static-fpi-ref 3) (binding-ref ? <table>) (primitive-relative-ref))) (setter (G007826 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <table>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <simple-method>) (pos . 55) (origin mop-class . <simple-method>) (class . constant))
    ((name . ceiling) (pos . 10) (origin float . ceiling))
    ((name . *tmp-source-file-name*) (pos . 61) (origin i-param . *tmp-source-file-name*))
    ((name . *no-gc*) (pos . 62) (origin i-param . *no-gc*))
    ((name . <simple-hash-table>) (pos . 15) (origin table1 . <simple-hash-table>) (class . constant))
    ((name . *create-C-module*) (pos . 60) (origin i-param . *create-C-module*))
    ((name . read) (pos . 24) (origin read . read))
    ((name . state-context-stack) (pos . 37) (origin thread . state-context-stack) (inline (G00245 (static-ref1) (binding-ref ? <state>) (primitive-relative-ref))) (setter (G00265 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <state>) (set-primitive-relative-ref) (nobble 2))))
    ((name . reset) (pos . 18) (origin collect . reset))
    ((name . <stream-condition>) (pos . 38) (origin stream2 . <stream-condition>) (class . constant))
    ((name . <slot>) (pos . 49) (origin mop-class . <slot>) (class . constant))
    ((name . lsd-size) (pos) (origin mop-class . lsd-size) (class . constant) (value 6))
    ((name . else) (pos . 14) (origin boot1 . else) (class . constant))
    ((name . stream-sink) (pos . 37) (origin stream2 . stream-sink) (inline (G005237 (static-fpi-ref 5) (binding-ref ? <stream>) (primitive-relative-ref))) (setter (G005263 (stack-ref 1) (static-fpi-ref 5) (stack-ref 2) (binding-ref ? <stream>) (set-primitive-relative-ref) (nobble 2))))
    ((name . list-remove) (pos . 17) (origin boot . list-remove))
    ((name . vector-stop) (pos . 23) (origin read . vector-stop) (class . constant))
    ((name . cons-slots) (pos . 46) (origin mop-class . cons-slots) (class . constant))
    ((name . int-binary-mod) (pos . 40) (origin boot1 . mod) (inline (G0070 (fpi-remainder))))
    ((name . method-keywords) (pos . 45) (origin mop-class . method-keywords) (class . constant))
    ((name . *pass*) (pos . 59) (origin i-param . *pass*))
    ((name . caaadr) (pos . 36) (origin list . caaadr) (inline (G003690 (cdr) (caar) (car))) (setter (G003773 (stack-ref 1) (cadr) (car) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . state-value-stack-size) (pos . 35) (origin thread . state-value-stack-size) (inline (G00247 (static-ref2) (binding-ref ? <state>) (primitive-relative-ref))) (setter (G00267 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <state>) (set-primitive-relative-ref) (nobble 2))))
    ((name . cdadar) (pos . 35) (origin list . cdadar) (inline (G003716 (cdar) (cdar))) (setter (G003800 (stack-ref 1) (cdar) (car) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . sort-list) (pos . 15) (origin boot . sort-list))
    ((name . *warnings*) (pos . 58) (origin i-param . *warnings*))
    ((name . concatenate) (pos . 17) (origin collect . concatenate))
    ((name . graph?) (pos . 10) (origin character . graph?))
    ((name . string-append) (pos . 11) (origin string . string-append))
    ((name . bit-not) (pos . 4) (origin bit . bit-not))
    ((name . write-object) (pos) (origin boot1 . write-object) (class . opencoding) (arity . 2) (opencoding (write-object)))
    ((name . compute-primitive-reader-using-class) (pos . 9) (origin mop-access . compute-primitive-reader-using-class))
    ((name . gf-slot-defaults) (pos . 37) (origin mop-class . gf-slot-defaults) (class . constant))
    ((name . format) (pos . 5) (origin format . format))
    ((name . compatible-superclasses?) (pos . 14) (origin mop-alloc . compatible-superclasses?))
    ((name . *recompile*) (pos . 57) (origin i-param . *recompile*))
    ((name . *current-no-dynamic-variables*) (pos . 7) (origin dynamic . *current-no-dynamic-variables*))
    ((name . cons?) (pos . 43) (origin boot1 . cons?) (inline (G0047 (consp))))
    ((name . *strip-stand-alone*) (pos . 56) (origin i-param . *strip-stand-alone*))
    ((name . gcd) (pos . 21) (origin number . gcd))
    ((name . control-block-buffer) (pos . 32) (origin stream2 . control-block-buffer) (inline (G005219 (static-fpi-ref 3) (binding-ref ? <stream-control-block>) (primitive-relative-ref))) (setter (G005249 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <stream-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . filter-keywords) (pos . 3) (origin mop-key . filter-keywords))
    ((name . all?) (pos . 16) (origin collect . all?))
    ((name . primitive-prin) (pos . 37) (origin boot1 . prin))
    ((name . stream-lock) (pos . 31) (origin stream2 . stream-lock) (inline (G005229 (static-ref1) (binding-ref ? <stream>) (primitive-relative-ref))))
    ((name . generic-print) (pos . 30) (origin stream2 . generic-print))
    ((name . *no-ct-handlers*) (pos . 55) (origin i-param . *no-ct-handlers*))
    ((name . *int-size-in-decimal-digits*) (pos) (origin stream . *int-size-in-decimal-digits*) (class . constant) (value 21))
    ((name . lowercase?) (pos . 9) (origin character . lowercase?))
    ((name . gf-size) (pos) (origin mop-class . gf-size) (class . constant) (value 9))
    ((name . *C-cc-flags*) (pos . 54) (origin i-param . *C-cc-flags*))
    ((name . quasiquote-mark) (pos . 21) (origin read . quasiquote-mark) (class . constant))
    ((name . random) (pos . 4) (origin random . random))
    ((name . method-slots) (pos . 26) (origin mop-class . method-slots) (class . constant))
    ((name . stream-control-block?) (pos . 29) (origin stream2 . stream-control-block?))
    ((name . O_CREAT) (pos . 8) (origin stream1 . O_CREAT) (class . constant))
    ((name . map1-list) (pos . 10) (origin boot . map1-list))
    ((name . fprintf) (pos . 22) (origin stream . fprintf))
    ((name . eul_close) (pos . 16) (origin stream1 . eul_close) (class . ff) (arity . 1) (ff (0) 0 (close . ff_stub_close4744)))
    ((name . <method>) (pos . 22) (origin mop-class . <method>) (class . constant))
    ((name . do1-table) (pos . 9) (origin table . do1-table))
    ((name . ct-error) (pos . 4) (origin i-error . ct-error))
    ((name . control-block-mode) (pos . 28) (origin stream2 . control-block-mode) (inline (G005223 (static-ref1) (binding-ref ? <file-control-block>) (primitive-relative-ref))) (setter (G005253 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <file-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . alnump) (pos . 8) (origin character . alnump))
    ((name . do1-vector) (pos . 15) (origin vector . do1-vector))
    ((name . primitive-print) (pos . 3) (origin boot1 . print))
    ((name . output-condition-contents) (pos . 4) (origin condition . output-condition-contents))
    ((name . thread-continuation) (pos . 29) (origin thread . thread-continuation) (inline (G00241 (static-fpi-ref 3) (binding-ref ? <simple-thread>) (primitive-relative-ref))) (setter (G00261 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <simple-thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . compute-primitive-writer-using-slot) (pos . 7) (origin mop-access . compute-primitive-writer-using-slot))
    ((name . primitive-slot-value) (pos . 10) (origin mop-inspect . primitive-slot-value))
    ((name . function-domain) (pos . 16) (origin mop-class . function-domain) (inline (G00728 (static-ref1) (primitive-ref))) (setter (G00788 (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . *main-link-string*) (pos . 53) (origin i-param . *main-link-string*))
    ((name . cadar) (pos . 29) (origin list . cadar) (inline (G003678 (cdar) (car))) (setter (G003761 (stack-ref 1) (cdar) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . anyp1-table) (pos . 8) (origin table . anyp1-table))
    ((name . lock?) (pos . 5) (origin lock . lock?))
    ((name . exit) (pos . 20) (origin boot1 . exit))
    ((name . add-method) (pos . 8) (origin mop-meth . add-method))
    ((name . slot-default) (pos . 10) (origin mop-class . slot-default) (inline (G00760 (static-fpi-ref 4) (primitive-ref))) (setter (G00820 (stack-ref 1) (static-fpi-ref 4) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . *object-dir*) (pos . 52) (origin i-param . *object-dir*))
    ((name . <double-float>) (pos . 9) (origin float . <double-float>) (class . constant))
    ((name . slot-required?) (pos . 9) (origin mop-class . slot-required?) (inline (G00762 (static-fpi-ref 5) (primitive-ref))) (setter (G00822 (stack-ref 1) (static-fpi-ref 5) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . to-stream) (pos . 26) (origin stream2 . to-stream))
    ((name . abs) (pos . 20) (origin number . abs) (inline (G001917 (stack-ref 0) (static-ref0) (fpi-lt) (stack-ref 0) (branch-nil G001919number) (static-ref0) (stack-ref 2) (fpi-difference) (branch G001920number) (label G001919number) (stack-ref 1) (label G001920number) (nobble 1) (nobble 1))))
    ((name . <=) (pos . 8) (origin compare . <=))
    ((name . *warning*) (pos . 3) (origin boot . *warning*))
    ((name . proper-list?) (pos . 25) (origin list . proper-list?))
    ((name . connect) (pos . 21) (origin stream . connect))
    ((name . eul_read) (pos . 17) (origin stream1 . eul_read) (class . ff) (arity . 3) (ff (0 3 0) 0 (read . ff_stub_read4745)))
    ((name . *verbose*) (pos . 51) (origin i-param . *verbose*))
    ((name . socket-port) (pos . 9) (origin socket . socket-port) (inline (G005774 (static-fpi-ref 3) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G005786 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . primitive-sprin) (pos . 24) (origin boot1 . sprin))
    ((name . odd?) (pos . 3) (origin integer . odd?))
    ((name . O_APPEND) (pos . 7) (origin stream1 . O_APPEND) (class . constant))
    ((name . flush-buffer) (pos . 23) (origin stream2 . flush-buffer))
    ((name . lock) (pos . 3) (origin lock . lock))
    ((name . system) (pos . 50) (origin boot1 . system))
    ((name . do2-list) (pos . 22) (origin list . do2-list))
    ((name . *peephole*) (pos . 50) (origin i-param . *peephole*))
    ((name . maximum-vector-size) (pos) (origin vector . maximum-vector-size) (class . constant) (value 536870911))
    ((name . *ostype*) (pos . 49) (origin i-param . *ostype*))
    ((name . *script-file*) (pos . 48) (origin i-param . *script-file*))
    ((name . *backtrace-nframes*) (pos . 31) (origin boot . *backtrace-nframes*))
    ((name . *min-table-entries*) (pos) (origin table1 . *min-table-entries*) (class . constant) (value 16))
    ((name . thread-dynamic-variables) (pos . 27) (origin thread . thread-dynamic-variables) (inline (G00231 (static-ref2) (binding-ref ? <thread>) (primitive-relative-ref))) (setter (G00251 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . accumulate-vector) (pos . 13) (origin vector . accumulate-vector))
    ((name . binary-lcm) (pos . 19) (origin number . binary-lcm))
    ((name . thread-start) (pos . 26) (origin thread . thread-start))
    ((name . quote-mark) (pos . 20) (origin read . quote-mark) (class . constant))
    ((name . anyp1-list) (pos . 28) (origin boot . anyp1-list))
    ((name . *absent*) (pos . 46) (origin boot1 . *absent*) (class . constant))
    ((name . c-string-as-eul-symbol) (pos . 10) (origin aux-table . c-string-as-eul-symbol) (class . ff) (arity . 1) (ff (8) 6 (eul_c_str_as_eul_symbol . ff_stub_eul_c_str_as_eul_symbol27)))
    ((name . *get-literal*) (pos . 47) (origin i-param . *get-literal*))
    ((name . *number-of-errors*) (pos . 46) (origin i-param . *number-of-errors*))
    ((name . wait) (pos . 2) (origin event . wait))
    ((name . mod) (pos . 18) (origin number . mod))
    ((name . digit?) (pos . 7) (origin character . digit?))
    ((name . current-thread-queue) (pos . 24) (origin thread . current-thread-queue))
    ((name . binary/) (pos . 17) (origin number . binary/))
    ((name . prin) (pos . 20) (origin stream . prin))
    ((name . int-binary%) (pos . 32) (origin boot1 . %) (inline (G0068 (fpi-remainder))))
    ((name . object?) (pos . 38) (origin boot1 . object?))
    ((name . add-subclass) (pos . 9) (origin mop-defcl . add-subclass))
    ((name . sig=) (pos . 10) (origin mop-gf . sig=))
    ((name . sprin-char) (pos . 18) (origin stream . sprin-char))
    ((name . primitive-class-of) (pos . 2) (origin mop-prim . primitive-class-of) (inline (G00558 (primitive-class-of))) (setter (G00562 (set-primitive-class-of))))
    ((name . most-positive-int) (pos) (origin fpi . most-positive-int) (class . constant) (value 536870911))
    ((name . dot) (pos . 19) (origin read . dot) (class . constant))
    ((name . as-uppercase) (pos . 6) (origin character . as-uppercase))
    ((name . <double*>) (pos . 5) (origin handler . <double*>) (class . constant))
    ((name . function-slot-defaults) (pos . 67) (origin mop-class . function-slot-defaults) (class . constant))
    ((name . primitive-sprint) (pos . 27) (origin boot1 . sprint))
    ((name . table-threshold) (pos . 14) (origin table1 . table-threshold) (inline (G007810 (static-ref0) (binding-ref ? <table>) (primitive-relative-ref))) (setter (G007822 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <table>) (set-primitive-relative-ref) (nobble 2))))
    ((name . table-hash-function) (pos . 13) (origin table1 . table-hash-function) (inline (G007818 (static-ref0) (binding-ref ? <hash-table>) (primitive-relative-ref))) (setter (G007828 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <hash-table>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *debug*) (pos . 45) (origin i-param . *debug*))
    ((name . string-empty?) (pos . 7) (origin string . string-empty?) (inline (G002598 (primitive-size) (fpi-zerop))))
    ((name . assoc-list-ref) (pos . 20) (origin boot . assoc-list-ref) (inline (G00143 (stack-ref 0) (stack-ref 2) (static-ref-nil) (assq) (nobble 2))))
    ((name . ct-serious-warning) (pos . 6) (origin i-notify . ct-serious-warning))
    ((name . cddr) (pos . 20) (origin list . cddr) (inline (G003662 (cddr))) (setter (G003743 (stack-ref 1) (cdr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . clear-table) (pos . 12) (origin table1 . clear-table))
    ((name . vector-start) (pos . 18) (origin read . vector-start) (class . constant))
    ((name . int-zero?) (pos . 31) (origin boot1 . int-zero?) (inline (G0080 (fpi-zerop))))
    ((name . binary<) (pos . 6) (origin compare . binary<))
    ((name . ct-warning) (pos . 5) (origin i-notify . ct-warning))
    ((name . file-lookup) (pos . 17) (origin stream . file-lookup))
    ((name . find-slot-names) (pos . 5) (origin mop-access . find-slot-names))
    ((name . *argc*) (pos . 28) (origin boot1 . *argc*) (class . constant))
    ((name . thread-return-value) (pos . 20) (origin thread . thread-return-value) (inline (G00235 (static-ref0) (binding-ref ? <simple-thread>) (primitive-relative-ref))) (setter (G00255 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <simple-thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . max) (pos . 5) (origin compare . max))
    ((name . cadadr) (pos . 18) (origin list . cadadr) (inline (G003702 (cadr) (cadr))) (setter (G003785 (stack-ref 1) (cadr) (cdr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . int-binary=) (pos . 11) (origin boot1 . =) (inline (G0074 (fpi-equal))))
    ((name . output-list-contents) (pos . 16) (origin stream . output-list-contents))
    ((name . generic-function-method-cache) (pos . 57) (origin mop-class . generic-function-method-cache) (inline (G00744 (static-fpi-ref 8) (primitive-ref))) (setter (G00804 (stack-ref 1) (static-fpi-ref 8) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . size) (pos . 9) (origin collect . size))
    ((name . bit-shift) (pos . 3) (origin bit . bit-shift))
    ((name . call1/cc) (pos . 18) (origin thread . call1/cc))
    ((name . <buffered-stream>) (pos . 19) (origin stream2 . <buffered-stream>) (class . constant))
    ((name . gf-keywords) (pos . 56) (origin mop-class . gf-keywords) (class . constant))
    ((name . <hash-table>) (pos . 11) (origin table1 . <hash-table>) (class . constant))
    ((name . slot-writer) (pos . 53) (origin mop-class . slot-writer) (inline (G00754 (static-ref1) (primitive-ref))) (setter (G00814 (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . table-comparator) (pos . 10) (origin table1 . table-comparator) (inline (G007820 (static-ref1) (binding-ref ? <hash-table>) (primitive-relative-ref))) (setter (G007830 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <hash-table>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *table-fill-factor*) (pos) (origin table1 . *table-fill-factor*) (class . constant) (value 2))
    ((name . *C-cc*) (pos . 44) (origin i-param . *C-cc*))
    ((name . *version*) (pos . 43) (origin i-param . *version*))
    ((name . list-size) (pos . 18) (origin boot . list-size))
    ((name . <socket>) (pos . 8) (origin socket . <socket>) (class . constant))
    ((name . string-compare) (pos . 17) (origin string . string-compare) (class . ff) (arity . 2) (ff (3 3) 0 (strcmp . ff_stub_strcmp2788)))
    ((name . primitive-find-slot-position) (pos . 7) (origin mop-inspect . primitive-find-slot-position))
    ((name . function?) (pos . 8) (origin mop-inspect . function?))
    ((name . name) (pos . 8) (origin collect . name))
    ((name . make-keyword) (pos . 55) (origin boot1 . make-keyword) (class . ff) (arity . 1) (ff (3) 6 (eul_make_keyword . ff_stub_eul_make_keyword245)))
    ((name . vector-append) (pos . 8) (origin vector . vector-append))
    ((name . +) (pos . 15) (origin boot1 . +) (inline (G0060 (fpi-sum))))
    ((name . *random-max*) (pos . 3) (origin random . *random-max*) (class . constant))
    ((name . *script*) (pos . 42) (origin i-param . *script*))
    ((name . state-value-stack) (pos . 14) (origin thread . state-value-stack) (inline (G00249 (static-fpi-ref 3) (binding-ref ? <state>) (primitive-relative-ref))) (setter (G00269 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <state>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <current-thread>) (pos . 15) (origin thread . <current-thread>))
    ((name . /) (pos . 12) (origin boot1 . /) (inline (G0066 (fpi-quotient))))
    ((name . make-method) (pos . 3) (origin mop-meth . make-method))
    ((name . find-slot) (pos . 8) (origin mop-defcl . find-slot))
    ((name . <sequence>) (pos . 7) (origin collect . <sequence>) (class . constant))
    ((name . CB-sum-overflow) (pos) (origin callback . CB-sum-overflow) (class . constant) (value 30))
    ((name . vector-ref) (pos . 7) (origin boot1 . vector-ref) (inline (G0094 (primitive-ref))) (setter (G00102 (set-primitive-ref))))
    ((name . ntok) (pos . 26) (origin stream1 . ntok) (class . ff) (arity . 2) (ff (8 8) 6 (ntok . ff_stub_ntok4754)))
    ((name . map2-list) (pos . 17) (origin list . map2-list))
    ((name . *dispatch-macro-character-table*) (pos . 17) (origin read . *dispatch-macro-character-table*))
    ((name . strerror) (pos . 6) (origin stream1 . strerror))
    ((name . do1-list) (pos . 16) (origin boot . do1-list))
    ((name . do) (pos . 6) (origin collect . do))
    ((name . compatible-superclass?) (pos . 8) (origin mop-alloc . compatible-superclass?))
    ((name . compute-defined-slot) (pos . 7) (origin mop-alloc . compute-defined-slot))
    ((name . state-context-stack-size) (pos . 12) (origin thread . state-context-stack-size) (inline (G00243 (static-ref0) (binding-ref ? <state>) (primitive-relative-ref))) (setter (G00263 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <state>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *get-full-import*) (pos . 41) (origin i-param . *get-full-import*))
    ((name . notify0) (pos . 4) (origin i-notify . notify0))
    ((name . sf-slots) (pos . 41) (origin mop-class . sf-slots) (class . constant))
    ((name . slot-value) (pos . 7) (origin mop-defcl . slot-value))
    ((name . cons-slot-defaults) (pos . 40) (origin mop-class . cons-slot-defaults) (class . constant))
    ((name . accumulate1-vector) (pos . 7) (origin vector . accumulate1-vector))
    ((name . binary-) (pos . 9) (origin number . binary-))
    ((name . listify-string) (pos . 5) (origin string . listify-string))
    ((name . compute-keywords) (pos . 6) (origin mop-alloc . compute-keywords))
    ((name . connection-port) (pos . 7) (origin socket . connection-port) (inline (G005776 (static-ref0) (binding-ref ? <connection>) (primitive-relative-ref))) (setter (G005788 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <connection>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *number-of-warnings*) (pos . 40) (origin i-param . *number-of-warnings*))
    ((name . buffered-stream?) (pos . 15) (origin stream2 . buffered-stream?))
    ((name . write) (pos . 15) (origin stream . write))
    ((name . sf-direct-slots) (pos . 38) (origin mop-class . sf-direct-slots) (class . constant))
    ((name . table-ref) (pos . 7) (origin table . table-ref))
    ((name . get-named-encl-lambda) (pos . 39) (origin i-param . get-named-encl-lambda))
    ((name . CB-read-overflow) (pos) (origin callback . CB-read-overflow) (class . constant) (value 34))
    ((name . string-stream?) (pos . 14) (origin stream2 . string-stream?))
    ((name . open-file-streams) (pos . 13) (origin stream2 . open-file-streams))
    ((name . dec) (pos . 45) (origin boot1 . dec) (inline (G0078 (fpi-dec))))
    ((name . <number>) (pos . 7) (origin number . <number>) (class . constant))
    ((name . binary%) (pos . 6) (origin number . binary%))
    ((name . stop-after-pass) (pos . 38) (origin i-param . stop-after-pass))
    ((name . primitive-stdout) (pos) (origin boot1 . stdout) (class . constant) (value 1))
    ((name . table-empty?) (pos . 6) (origin table . table-empty?))
    ((name . *C-ar*) (pos . 37) (origin i-param . *C-ar*))
    ((name . all1-table?) (pos . 5) (origin table . all1-table?))
    ((name . *error*) (pos . 13) (origin boot . *error*))
    ((name . sd-slots) (pos . 30) (origin mop-class . sd-slots) (class . constant))
    ((name . stream-write-action) (pos . 12) (origin stream2 . stream-write-action) (inline (G005231 (static-ref2) (binding-ref ? <stream>) (primitive-relative-ref))) (setter (G005257 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <stream>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *tmp-load-dir*) (pos . 36) (origin i-param . *tmp-load-dir*))
    ((name . O_RDONLY) (pos . 4) (origin stream1 . O_RDONLY) (class . constant))
    ((name . install-callback) (pos . 4) (origin callback . install-callback))
    ((name . *callback-vector*) (pos . 3) (origin callback . *callback-vector*) (class . constant))
    ((name . restore-simple-state) (pos) (origin thread . restore-simple-state) (class . opencoding) (arity . 2) (opencoding (restore-state)))
    ((name . anyp1-vector) (pos . 4) (origin vector . anyp1-vector))
    ((name . anyp2-list) (pos . 11) (origin boot . anyp2-list))
    ((name . *no-recompile*) (pos . 35) (origin i-param . *no-recompile*))
    ((name . character?) (pos . 33) (origin boot1 . character?) (inline (G0041 (characterp))))
    ((name . predefined-reader) (pos . 6) (origin mop-defcl . predefined-reader))
    ((name . <function>) (pos . 27) (origin mop-class . <function>) (class . constant))
    ((name . sd-size) (pos) (origin mop-class . sd-size) (class . constant) (value 2))
    ((name . float?) (pos . 3) (origin float . float?))
    ((name . <float>) (pos . 4) (origin float . <float>) (class . constant))
    ((name . subvector) (pos . 3) (origin vector . subvector))
    ((name . slice) (pos . 4) (origin collect . slice))
    ((name . stderr) (pos . 9) (origin stream2 . stderr))
    ((name . thread-reschedule) (pos . 7) (origin thread . thread-reschedule))
    ((name . <thread>) (pos . 8) (origin thread . <thread>) (class . constant))
    ((name . control-block-buffer-size) (pos . 8) (origin stream2 . control-block-buffer-size) (inline (G005217 (static-ref2) (binding-ref ? <stream-control-block>) (primitive-relative-ref))) (setter (G005247 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <stream-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . backtrace) (pos . 8) (origin boot . backtrace))
    ((name . uppercase?) (pos . 2) (origin character . uppercase?))
    ((name . car) (pos . 29) (origin boot1 . car) (inline (G0082 (car))) (setter (G0096 (set-car))))
    ((name . CB-difference-underflow) (pos) (origin callback . CB-difference-underflow) (class . constant) (value 31))
    ((name . stream-read-action) (pos . 7) (origin stream2 . stream-read-action) (inline (G005233 (static-fpi-ref 3) (binding-ref ? <stream>) (primitive-relative-ref))) (setter (G005259 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <stream>) (set-primitive-relative-ref) (nobble 2))))
    ((name . most-negative-int) (pos) (origin fpi . most-negative-int) (class . constant) (value -536870911))
    ((name . map1-string) (pos . 4) (origin string . map1-string))
    ((name . function-size) (pos) (origin mop-class . function-size) (class . constant) (value 3))
    ((name . signum) (pos . 5) (origin number . signum) (inline (G001922 (stack-ref 0) (fpi-zerop) (stack-ref 0) (branch-nil G001924number) (stack-ref 0) (branch G001925number) (label G001924number) (stack-ref 1) (stack-ref 0) (static-ref0) (fpi-lt) (stack-ref 0) (branch-nil G001926G001919number) (static-ref0) (stack-ref 2) (fpi-difference) (branch G001926G001920number) (label G001926G001919number) (stack-ref 1) (label G001926G001920number) (nobble 1) (nobble 1) (stack-ref 2) (stack-ref 1) (fpi-quotient) (nobble 1) (label G001925number) (nobble 1) (nobble 1))))
    ((name . keyword-name) (pos . 7) (origin mop-class . keyword-name) (inline (G00766 (static-ref0) (primitive-ref))))
    ((name . <end-of-stream>) (pos . 6) (origin stream2 . <end-of-stream>) (class . constant))
    ((name . sd-keywords) (pos . 18) (origin mop-class . sd-keywords) (class . constant))
    ((name . object-keywords) (pos . 17) (origin mop-class . object-keywords) (class . constant))
    ((name . *current-no-error-handlers*) (pos . 4) (origin dynamic . *current-no-error-handlers*))
    ((name . eos-default-value) (pos . 5) (origin stream2 . eos-default-value))
    ((name . class-name) (pos . 14) (origin mop-class . class-name) (inline (G00708 (static-ref0) (primitive-ref))) (setter (G00768 (stack-ref 1) (static-ref0) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . compute-specialized-slot-class) (pos . 2) (origin mop-alloc . compute-specialized-slot-class))
    ((name . cddar) (pos . 9) (origin list . cddar) (inline (G003669 (cdar) (cdr))) (setter (G003752 (stack-ref 1) (cdar) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . find1-list) (pos . 8) (origin list . find1-list))
    ((name . sflush) (pos . 13) (origin stream . sflush))
    ((name . *eulysses-arch*) (pos . 34) (origin i-param . *eulysses-arch*))
    ((name . class?) (pos . 4) (origin mop-inspect . class?))
    ((name . set-dispatch-macro-character) (pos . 16) (origin read . set-dispatch-macro-character))
    ((name . caddar) (pos . 5) (origin list . caddar) (inline (G003705 (cdar) (cadr))) (setter (G003788 (stack-ref 1) (cdar) (cdr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . random-true-nil) (pos . 2) (origin random . random-true-nil))
    ((name . eul_open) (pos . 15) (origin stream1 . eul_open) (class . ff) (arity . 3) (ff (3 0 0) 0 (open . ff_stub_open4743)))
    ((name . push-dynamic-variable) (pos . 2) (origin dynamic . push-dynamic-variable))
    ((name . negative?) (pos . 2) (origin number . negative?) (inline (G001930 (static-ref0) (fpi-lt))))
    ((name . list-drop) (pos . 3) (origin list . list-drop))
    ((name . =) (pos . 11) (origin boot1 . =) (inline (G0074 (fpi-equal))))
    ((name . thread-block) (pos . 2) (origin thread . thread-block))
    ((name . *source-file-names*) (pos . 33) (origin i-param . *source-file-names*))
    ((name . emptyp) (pos . 3) (origin collect . emptyp))
    ((name . subclass?) (pos . 2) (origin mop-inspect . subclass?))
    ((name . <handler>) (pos . 2) (origin handler . <handler>) (class . constant))
    ((name . int-binary/) (pos . 12) (origin boot1 . /) (inline (G0066 (fpi-quotient))))
    ((name . fill-buffer) (pos . 2) (origin stream2 . fill-buffer))
    ((name . *redefine-imported-bindings*) (pos . 31) (origin i-param . *redefine-imported-bindings*))
    ((name . eul_list_as_eul_string) (pos . 20) (origin string . eul_list_as_eul_string) (class . ff) (arity . 1) (ff (8) 6 (eul_list_as_eul_string . ff_stub_eul_list_as_eul_string2791)))
    ((name . map) (pos . 2) (origin collect . map))
    ((name . deep-copy) (pos . 3) (origin copy . deep-copy))
    ((name . even?) (pos . 5) (origin integer . even?))
    ((name . cdaddr) (pos . 44) (origin list . cdaddr) (inline (G003719 (cddr) (cdar))) (setter (G003803 (stack-ref 1) (caddr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . <condition>) (pos . 8) (origin condition . <condition>) (class . constant))
    ((name . <keyword>) (pos . 82) (origin mop-class . <keyword>) (class . constant))
    ((name . slot-name) (pos . 81) (origin mop-class . slot-name) (inline (G00756 (static-ref2) (primitive-ref))) (setter (G00816 (stack-ref 1) (static-ref2) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . vector-empty?) (pos . 18) (origin vector . vector-empty?) (inline (G007173 (primitive-size) (fpi-zerop))))
    ((name . access-table-values) (pos . 8) (origin aux-table . access-table-values))
    ((name . read-line) (pos . 15) (origin read . read-line))
    ((name . access-table-do) (pos . 7) (origin aux-table . access-table-do))
    ((name . stdin) (pos . 50) (origin stream2 . stdin))
    ((name . *get-loaded-syntax-module*) (pos . 30) (origin i-param . *get-loaded-syntax-module*))
    ((name . name-slot-defaults) (pos . 79) (origin mop-class . name-slot-defaults) (class . constant))
    ((name . compute-specialized-slot) (pos . 15) (origin mop-alloc . compute-specialized-slot))
    ((name . list-start) (pos . 14) (origin read . list-start) (class . constant))
    ((name . method-function) (pos . 77) (origin mop-class . method-function) (inline (G00750 (static-ref2) (primitive-ref))) (setter (G00810 (stack-ref 1) (static-ref2) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . cdddr) (pos . 43) (origin list . cdddr) (inline (G003684 (cddr) (cdr))) (setter (G003767 (stack-ref 1) (cddr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . reverse) (pos . 25) (origin boot . reverse-list))
    ((name . member-alist) (pos . 42) (origin list . member-alist))
    ((name . listify-env-string) (pos . 26) (origin boot . listify-env-string))
    ((name . setter) (pos . 41) (origin boot1 . setter))
    ((name . number?) (pos . 24) (origin number . number?))
    ((name . *modified-module-names*) (pos . 29) (origin i-param . *modified-module-names*))
    ((name . cdaadr) (pos . 41) (origin list . cdaadr) (inline (G003713 (cadr) (cdar))) (setter (G003797 (stack-ref 1) (cadr) (car) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . control-block-buffer-cnt) (pos . 47) (origin stream2 . control-block-buffer-cnt) (inline (G005213 (static-ref0) (binding-ref ? <stream-control-block>) (primitive-relative-ref))) (setter (G005243 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <stream-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . function-name) (pos . 73) (origin mop-class . function-name) (inline (G00726 (static-ref0) (primitive-ref))) (setter (G00786 (stack-ref 1) (static-ref0) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . <simple-class>) (pos . 71) (origin mop-class . <simple-class>) (class . constant))
    ((name . list-ref) (pos . 23) (origin boot . list-ref))
    ((name . slice-list) (pos . 40) (origin list . slice-list))
    ((name . prin-address) (pos . 12) (origin stream . prin-address))
    ((name . accumulate) (pos . 23) (origin collect . accumulate))
    ((name . semaphore?) (pos . 7) (origin lock . semaphore?))
    ((name . class-keywords) (pos . 70) (origin mop-class . class-keywords) (inline (G00718 (static-fpi-ref 5) (primitive-ref))) (setter (G00778 (stack-ref 1) (static-fpi-ref 5) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . *create-C-library*) (pos . 28) (origin i-param . *create-C-library*))
    ((name . eul_socket_strerror) (pos . 24) (origin stream1 . eul_socket_strerror) (class . ff) (arity . 1) (ff (0) 3 (eul_socket_strerror . ff_stub_eul_socket_strerror4752)))
    ((name . O_TRUNC) (pos . 13) (origin stream1 . O_TRUNC) (class . constant))
    ((name . collectionp) (pos . 21) (origin collect . collectionp))
    ((name . append!) (pos . 21) (origin boot . append!))
    ((name . *) (pos . 34) (origin boot1 . *) (inline (G0064 (fpi-product))))
    ((name . ct-exit) (pos . 2) (origin i-error . ct-exit))
    ((name . table-values) (pos . 8) (origin table1 . table-values))
    ((name . class-slotz) (pos . 65) (origin mop-class . class-slotz) (class . constant))
    ((name . CB-product-overflow) (pos) (origin callback . CB-product-overflow) (class . constant) (value 32))
    ((name . condition-message) (pos . 6) (origin condition . condition-message) (inline (G00860 (static-ref0) (binding-ref ? <condition>) (primitive-relative-ref))) (setter (G00862 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <condition>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <list>) (pos . 64) (origin mop-class . <list>) (class . constant))
    ((name . O_WRONLY) (pos . 11) (origin stream1 . O_WRONLY) (class . constant))
    ((name . fill) (pos . 19) (origin collect . fill))
    ((name . generic-read) (pos . 43) (origin stream2 . generic-read))
    ((name . method-size) (pos) (origin mop-class . method-size) (class . constant) (value 3))
    ((name . class-direct-subclasses) (pos . 63) (origin mop-class . class-direct-subclasses) (inline (G00714 (static-fpi-ref 3) (primitive-ref))) (setter (G00774 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . <int>) (pos . 4) (origin fpi . <int>) (class . constant))
    ((name . string-data) (pos . 12) (origin string . string-data) (inline (G002596 (static-ref0) (binding-ref ? <string>) (primitive-relative-ref))) (setter (G002603 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <string>) (set-primitive-relative-ref) (nobble 2))))
    ((name . int?) (pos . 30) (origin boot1 . int?) (inline (G0049 (fpip))))
    ((name . control-block-descriptor) (pos . 41) (origin stream2 . control-block-descriptor) (inline (G005221 (static-ref0) (binding-ref ? <file-control-block>) (primitive-relative-ref))) (setter (G005251 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <file-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . first-arithmetic-cb) (pos) (origin callback . first-arithmetic-cb) (class . constant) (value 1))
    ((name . sformat) (pos . 4) (origin format . sformat))
    ((name . symbol-name) (pos . 59) (origin mop-class . symbol-name) (inline (G00764 (static-ref0) (primitive-ref))))
    ((name . caar) (pos . 39) (origin list . caar) (inline (G003656 (caar))) (setter (G003734 (stack-ref 1) (car) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . slot-keyword) (pos . 61) (origin mop-class . slot-keyword) (inline (G00758 (static-fpi-ref 3) (primitive-ref))) (setter (G00818 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . int-binary+) (pos . 15) (origin boot1 . +) (inline (G0060 (fpi-sum))))
    ((name . cerror) (pos . 3) (origin format . cerror))
    ((name . bit-ior) (pos . 5) (origin bit . bit-ior))
    ((name . methodp) (pos . 12) (origin mop-inspect . methodp))
    ((name . make-generic-function) (pos . 16) (origin mop-gf . make-generic-function))
    ((name . fill-simple-state) (pos) (origin thread . fill-simple-state) (class . opencoding) (arity . 1) (opencoding (fill-state)))
    ((name . <local-slot>) (pos . 51) (origin mop-class . <local-slot>) (class . constant))
    ((name . symbol?) (pos . 23) (origin boot1 . symbol?) (inline (G0045 (symbolp))))
    ((name . inc) (pos . 21) (origin boot1 . inc) (inline (G0076 (fpi-inc))))
    ((name . lispin) (pos . 13) (origin read . lispin) (class . constant))
    ((name . notify) (pos . 3) (origin i-notify . notify))
    ((name . list-equal) (pos . 49) (origin boot1 . equal))
    ((name . disconnect) (pos . 39) (origin stream2 . disconnect))
    ((name . integer?) (pos . 4) (origin integer . integer?))
    ((name . min) (pos . 10) (origin compare . min))
    ((name . read-s-expression) (pos . 12) (origin read . read-s-expression))
    ((name . select-list) (pos . 37) (origin list . select-list))
    ((name . *open-file-streams*) (pos . 36) (origin stream2 . *open-file-streams*))
    ((name . cpu-time) (pos . 13) (origin boot1 . cpu-time))
    ((name . simple-function-environment) (pos . 47) (origin mop-class . simple-function-environment) (inline (G00730 (static-fpi-ref 3) (primitive-ref))) (setter (G00790 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . *errors*) (pos . 25) (origin i-param . *errors*))
    ((name . *stop-after-pass*) (pos . 24) (origin i-param . *stop-after-pass*))
    ((name . compute-slot-writer) (pos . 11) (origin mop-access . compute-slot-writer))
    ((name . error-no-applicable-methods) (pos . 15) (origin mop-gf . error-no-applicable-methods))
    ((name . O_NONBLOCK) (pos . 10) (origin stream1 . O_NONBLOCK) (class . constant))
    ((name . fill-thread-state) (pos) (origin thread . fill-thread-state) (class . opencoding) (arity . 1) (opencoding (fill-thread-state)))
    ((name . convert) (pos . 2) (origin convert . convert))
    ((name . finalize) (pos . 14) (origin mop-gf . finalize))
    ((name . name-size) (pos) (origin mop-class . name-size) (class . constant) (value 1))
    ((name . compute-and-ensure-slot-accessors) (pos . 10) (origin mop-access . compute-and-ensure-slot-accessors))
    ((name . print) (pos . 11) (origin stream . print))
    ((name . eul_write) (pos . 18) (origin stream1 . eul_write) (class . ff) (arity . 3) (ff (0 3 0) 0 (write . ff_stub_write4746)))
    ((name . stdout) (pos . 34) (origin stream2 . stdout))
    ((name . <simple-thread>) (pos . 34) (origin thread . <simple-thread>) (class . constant))
    ((name . hash-table?) (pos . 7) (origin table1 . hash-table?))
    ((name . lcm) (pos . 22) (origin number . lcm))
    ((name . caaar) (pos . 34) (origin list . caaar) (inline (G003681 (caar) (car))) (setter (G003764 (stack-ref 1) (caar) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . control-block-file-name) (pos . 33) (origin stream2 . control-block-file-name) (inline (G005225 (static-ref2) (binding-ref ? <file-control-block>) (primitive-relative-ref))) (setter (G005255 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <file-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . cdaar) (pos . 33) (origin list . cdaar) (inline (G003675 (caar) (cdr))) (setter (G003758 (stack-ref 1) (caar) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . reverse-vector) (pos . 16) (origin vector . reverse-vector))
    ((name . <general-condition>) (pos . 5) (origin condition . <general-condition>) (class . constant))
    ((name . ticks-per-second) (pos . 3) (origin event . ticks-per-second) (class . constant))
    ((name . generic-function-discriminating-function) (pos . 35) (origin mop-class . generic-function-discriminating-function) (inline (G00742 (static-fpi-ref 7) (primitive-ref))) (setter (G00802 (stack-ref 1) (static-fpi-ref 7) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . method-slot-defaults) (pos . 34) (origin mop-class . method-slot-defaults) (class . constant))
    ((name . binary=) (pos . 9) (origin compare . binary=))
    ((name . semaphore-counter) (pos . 6) (origin lock . semaphore-counter) (inline (G004870 (static-ref0) (binding-ref ? <semaphore>) (primitive-relative-ref))) (setter (G004872 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <semaphore>) (set-primitive-relative-ref) (nobble 2))))
    ((name . slot-reader) (pos . 32) (origin mop-class . slot-reader) (inline (G00752 (static-ref0) (primitive-ref))) (setter (G00812 (stack-ref 1) (static-ref0) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . sort) (pos . 15) (origin collect . sort))
    ((name . socket?) (pos . 10) (origin socket . socket?))
    ((name . make-vector) (pos . 39) (origin boot1 . make-vector))
    ((name . atom?) (pos . 36) (origin boot1 . atom?) (inline (G0057 (consp) (null))))
    ((name . access-table-map) (pos . 6) (origin aux-table . access-table-map))
    ((name . cdr) (pos . 35) (origin boot1 . cdr) (inline (G0084 (cdr))) (setter (G0098 (set-cdr))))
    ((name . do1-string) (pos . 10) (origin string . do1-string))
    ((name . spprint) (pos . 8) (origin mop-access . spprint))
    ((name . find) (pos . 14) (origin collect . find))
    ((name . gensym) (pos . 6) (origin symbol . gensym))
    ((name . shallow-copy) (pos . 2) (origin copy . shallow-copy))
    ((name . fmt) (pos . 2) (origin format . fmt))
    ((name . sf-slot-defaults) (pos . 29) (origin mop-class . sf-slot-defaults) (class . constant))
    ((name . primitive-allocate) (pos . 3) (origin mop-prim . primitive-allocate) (inline (G00556 (primitive-allocate))))
    ((name . lsd-slots) (pos . 28) (origin mop-class . lsd-slots) (class . constant))
    ((name . newline) (pos . 10) (origin stream . newline))
    ((name . int-as-string) (pos . 5) (origin fpi . int-as-string) (class . ff) (arity . 1) (ff (0) 3 (eul_int_as_str . ff_stub_eul_int_as_str2337)))
    ((name . <null>) (pos . 25) (origin mop-class . <null>) (class . constant))
    ((name . thread?) (pos . 30) (origin thread . thread?))
    ((name . <function-class>) (pos . 24) (origin mop-class . <function-class>) (class . constant))
    ((name . compute-class-precedence-list) (pos . 13) (origin mop-alloc . compute-class-precedence-list))
    ((name . *tmp-start-source-file-name*) (pos . 23) (origin i-param . *tmp-start-source-file-name*))
    ((name . caddr) (pos . 32) (origin list . caddr) (inline (G003664 (caddr))) (setter (G003746 (stack-ref 1) (cddr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . slot-value-using-slot) (pos . 10) (origin mop-defcl . slot-value-using-slot))
    ((name . lsd-keywords) (pos . 21) (origin mop-class . lsd-keywords) (class . constant))
    ((name . tailstring) (pos . 52) (origin boot1 . tailstring) (class . ff) (arity . 2) (ff (3 0) 3 (eul_tailstr . ff_stub_eul_tailstr242)))
    ((name . generic-write) (pos . 27) (origin stream2 . generic-write))
    ((name . cpl-subclass?) (pos . 11) (origin mop-inspect . cpl-subclass?))
    ((name . class-code) (pos . 19) (origin mop-class . class-code) (inline (G00724 (static-fpi-ref 9) (primitive-ref))) (setter (G00784 (stack-ref 1) (static-fpi-ref 9) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . cdadr) (pos . 31) (origin list . cdadr) (inline (G003666 (cadr) (cdr))) (setter (G003749 (stack-ref 1) (cadr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . accumulate-list) (pos . 26) (origin list . accumulate-list))
    ((name . *argv*) (pos . 26) (origin boot1 . *argv*) (class . constant))
    ((name . <simple-generic-function>) (pos . 15) (origin mop-class . <simple-generic-function>) (class . constant))
    ((name . compute-defined-slot-class) (pos . 12) (origin mop-alloc . compute-defined-slot-class))
    ((name . cddaar) (pos . 28) (origin list . cddaar) (inline (G003722 (caar) (cddr))) (setter (G003806 (stack-ref 1) (caar) (cdr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . call/ep) (pos . 2) (origin let-cc . call/ep))
    ((name . name-keywords) (pos . 8) (origin mop-class . name-keywords) (class . constant))
    ((name . cadr) (pos . 30) (origin list . cadr) (inline (G003658 (cadr))) (setter (G003737 (stack-ref 1) (cdr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . append) (pos . 7) (origin boot . append))
    ((name . converter) (pos . 13) (origin mop-class . converter))
    ((name . eul_make_connection) (pos . 23) (origin stream1 . eul_make_connection) (class . ff) (arity . 3) (ff (3 3 3) 0 (eul_make_connection . ff_stub_eul_make_connection4751)))
    ((name . apply) (pos . 5) (origin boot . apply))
    ((name . object-slots) (pos . 12) (origin mop-class . object-slots) (class . constant))
    ((name . object-size) (pos) (origin mop-class . object-size) (class . constant) (value 0))
    ((name . generic-function-method-keywords) (pos . 11) (origin mop-class . generic-function-method-keywords) (inline (G00736 (static-fpi-ref 4) (primitive-ref))) (setter (G00796 (stack-ref 1) (static-fpi-ref 4) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . remove) (pos . 13) (origin collect . remove))
    ((name . string-size) (pos . 18) (origin boot1 . string-size) (inline (G0088 (primitive-size))))
    ((name . unlock) (pos . 4) (origin lock . unlock))
    ((name . substring1) (pos . 51) (origin boot1 . substring) (class . ff) (arity . 3) (ff (3 0 0) 3 (eul_substr . ff_stub_eul_substr241)))
    ((name . *delimiter*) (pos . 22) (origin i-param . *delimiter*) (class . constant))
    ((name . parse-module) (pos . 17) (origin i-param . parse-module))
    ((name . map1-list-last-special) (pos . 27) (origin list . map1-list-last-special))
    ((name . floor) (pos . 8) (origin float . floor))
    ((name . *C-cc-libs*) (pos . 21) (origin i-param . *C-cc-libs*))
    ((name . accumulate1) (pos . 12) (origin collect . accumulate1))
    ((name . member) (pos . 11) (origin collect . member))
    ((name . *default-error-handler*) (pos . 3) (origin condition . *default-error-handler*))
    ((name . prin-char) (pos . 9) (origin stream . prin-char))
    ((name . *silent*) (pos . 20) (origin i-param . *silent*))
    ((name . *get-loaded-module*) (pos . 19) (origin i-param . *get-loaded-module*))
    ((name . compile-module) (pos . 18) (origin i-param . compile-module))
    ((name . compute-method-lookup-function) (pos . 7) (origin mop-meth . compute-method-lookup-function))
    ((name . accumulate1-list) (pos . 24) (origin list . accumulate1-list))
    ((name . string-ref) (pos . 9) (origin boot1 . string-ref) (inline (G0090 (string-ref))) (setter (G00100 (set-string-ref))))
    ((name . pop-error-handlers) (pos . 6) (origin dynamic . pop-error-handlers))
    ((name . initialize) (pos . 12) (origin mop-gf . initialize))
    ((name . ensure-slot-writer) (pos . 6) (origin mop-access . ensure-slot-writer))
    ((name . signal) (pos . 2) (origin condition . signal))
    ((name . !=) (pos . 7) (origin compare . !=))
    ((name . file-control-block?) (pos . 24) (origin stream2 . file-control-block?))
    ((name . getchar) (pos . 32) (origin boot . getchar) (class . ff) (arity . 0) (ff () 1 (getchar . ff_stub_getchar419)))
    ((name . access-table-size) (pos . 5) (origin aux-table . access-table-size))
    ((name . sread) (pos . 10) (origin read . sread))
    ((name . list?) (pos . 5) (origin boot1 . list?) (inline (G0055 (listp))))
    ((name . caadr) (pos . 23) (origin list . caadr) (inline (G003672 (cadr) (car))) (setter (G003755 (stack-ref 1) (cadr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . handler?) (pos . 8) (origin handler . handler?))
    ((name . stable-add-method) (pos . 5) (origin mop-meth . stable-add-method))
    ((name . tconc) (pos . 28) (origin thread . tconc))
    ((name . map1-vector) (pos . 14) (origin vector . map1-vector))
    ((name . gf-slots) (pos . 80) (origin mop-class . gf-slots) (class . constant))
    ((name . <string*>) (pos . 6) (origin handler . <string*>) (class . constant))
    ((name . cons-keywords) (pos . 78) (origin mop-class . cons-keywords) (class . constant))
    ((name . <stream-control-block>) (pos . 22) (origin stream2 . <stream-control-block>) (class . constant))
    ((name . <state>) (pos . 25) (origin thread . <state>) (class . constant))
    ((name . *load-path*) (pos . 16) (origin i-param . *load-path*))
    ((name . map2-vector) (pos . 12) (origin vector . map2-vector))
    ((name . string-equal) (pos . 8) (origin string . string-equal) (inline (G002601 (call-foreign-function string-compare) (nobble 2) (fpi-zerop))))
    ((name . class-abstract?) (pos . 75) (origin mop-class . class-abstract?) (inline (G00722 (static-fpi-ref 7) (primitive-ref))) (setter (G00782 (stack-ref 1) (static-fpi-ref 7) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . <class>) (pos . 76) (origin mop-class . <class>) (class . constant))
    ((name . primitive-ref) (pos . 4) (origin mop-prim . primitive-ref) (inline (G00560 (primitive-ref))) (setter (G00564 (set-primitive-ref))))
    ((name . thread-state) (pos . 23) (origin thread . thread-state) (inline (G00239 (static-ref2) (binding-ref ? <simple-thread>) (primitive-relative-ref))) (setter (G00259 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <simple-thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <cons>) (pos . 72) (origin mop-class . <cons>) (class . constant))
    ((name . symbol-exists?) (pos . 4) (origin symbol . symbol-exists?))
    ((name . member-list) (pos . 24) (origin boot . member-list))
    ((name . current-thread) (pos . 22) (origin thread . current-thread))
    ((name . reverse-vector!) (pos . 11) (origin vector . reverse-vector!))
    ((name . caadar) (pos . 21) (origin list . caadar) (inline (G003693 (cdar) (caar))) (setter (G003776 (stack-ref 1) (cdar) (car) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . zero?) (pos . 16) (origin number . zero?))
    ((name . access-table-keys) (pos . 3) (origin aux-table . access-table-keys))
    ((name . stream-source) (pos . 21) (origin stream2 . stream-source) (inline (G005235 (static-fpi-ref 4) (binding-ref ? <stream>) (primitive-relative-ref))) (setter (G005261 (stack-ref 1) (static-fpi-ref 4) (stack-ref 2) (binding-ref ? <stream>) (set-primitive-relative-ref) (nobble 2))))
    ((name . make-access-table) (pos . 4) (origin aux-table . make-access-table))
    ((name . class-slot-defaults) (pos . 68) (origin mop-class . class-slot-defaults) (class . constant))
    ((name . eul_sprintf_string) (pos . 20) (origin stream1 . eul_sprintf_string) (class . ff) (arity . 6) (ff (3 0 0 0 3 3) 0 (eul_sprintf_string . ff_stub_eul_sprintf_string4748)))
    ((name . *linked-C-libraries*) (pos . 14) (origin i-param . *linked-C-libraries*))
    ((name . push-error-handler) (pos . 5) (origin dynamic . push-error-handler))
    ((name . <read-error>) (pos . 9) (origin read . <read-error>) (class . constant))
    ((name . init-class) (pos . 3) (origin mop-init . init-class) (inline (G001364 (stack-ref 7) (stack-ref 7) (stack-ref 1) (static-ref0) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (stack-ref 6) (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (stack-ref 5) (stack-ref 1) (static-ref2) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (stack-ref 4) (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (static-ref-nil) (stack-ref 1) (static-fpi-ref 4) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (stack-ref 3) (stack-ref 1) (static-fpi-ref 5) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 7) (stack-ref 2) (cons) (stack-ref 8) (stack-ref 1) (stack-ref 1) (static-fpi-ref 6) (stack-ref 2) (set-primitive-ref) (nobble 2) (pop1) (stack-ref 8) (stack-ref 2) (stack-ref 1) (static-fpi-ref 7) (stack-ref 2) (set-primitive-ref) (nobble 2) (nobble 1) (nobble 8))))
    ((name . %) (pos . 32) (origin boot1 . %) (inline (G0068 (fpi-remainder))))
    ((name . binary+) (pos . 14) (origin number . binary+))
    ((name . compute-inherited-keywords) (pos . 10) (origin mop-alloc . compute-inherited-keywords))
    ((name . all1-vector?) (pos . 10) (origin vector . all1-vector?))
    ((name . make-symbol) (pos . 54) (origin boot1 . make-symbol) (class . ff) (arity . 1) (ff (3) 6 (eul_make_symbol . ff_stub_eul_make_symbol244)))
    ((name . negate) (pos . 13) (origin number . negate))
    ((name . int-as-character) (pos) (origin boot1 . int-as-character) (class . opencoding) (arity . 1) (opencoding (fpi-as-character)))
    ((name . <int*>) (pos . 4) (origin handler . <int*>) (class . constant))
    ((name . *no-else*) (pos . 13) (origin i-param . *no-else*))
    ((name . sequence?) (pos . 10) (origin collect . sequence?))
    ((name . cadddr) (pos . 19) (origin list . cadddr) (inline (G003708 (cadddr))) (setter (G003791 (stack-ref 1) (cddr) (cdr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . sprint) (pos . 7) (origin stream . sprint))
    ((name . method-domain) (pos . 58) (origin mop-class . method-domain) (inline (G00748 (static-ref1) (primitive-ref))) (setter (G00808 (stack-ref 1) (static-ref1) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . eul_socket_accept) (pos . 22) (origin stream1 . eul_socket_accept) (class . ff) (arity . 1) (ff (0) 0 (eul_socket_accept . ff_stub_eul_socket_accept4750)))
    ((name . unquote-mark) (pos . 8) (origin read . unquote-mark) (class . constant))
    ((name . eq) (pos . 22) (origin boot1 . eq) (inline (G0035 (eq))))
    ((name . <stream>) (pos . 20) (origin stream2 . <stream>) (class . constant))
    ((name . method-generic-function) (pos . 54) (origin mop-class . method-generic-function) (inline (G00746 (static-ref0) (primitive-ref))) (setter (G00806 (stack-ref 1) (static-ref0) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . <vector>) (pos . 9) (origin vector . <vector>) (class . constant))
    ((name . <character>) (pos . 5) (origin character . <character>) (class . constant))
    ((name . binary*) (pos . 12) (origin number . binary*))
    ((name . string?) (pos . 17) (origin boot1 . string?) (inline (G0043 (stringp))))
    ((name . substring) (pos . 6) (origin string . substring))
    ((name . end-of-stream) (pos . 18) (origin stream2 . end-of-stream))
    ((name . map1-table) (pos . 2) (origin table . map1-table))
    ((name . <double>) (pos . 7) (origin float . <double>) (class . constant))
    ((name . snewline) (pos . 6) (origin stream . snewline))
    ((name . >) (pos . 4) (origin compare . >))
    ((name . *linked-C-ff-files*) (pos . 12) (origin i-param . *linked-C-ff-files*))
    ((name . class-slots) (pos . 50) (origin mop-class . class-slots) (inline (G00716 (static-fpi-ref 4) (primitive-ref))) (setter (G00776 (stack-ref 1) (static-fpi-ref 4) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . list-stop) (pos . 7) (origin read . list-stop) (class . constant))
    ((name . handle) (pos . 3) (origin handler . handle) (inline (G009839 (static-ref0) (binding-ref ? <handler>) (primitive-relative-ref))) (setter (G009841 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <handler>) (set-primitive-relative-ref) (nobble 2))))
    ((name . generic-function-method-class) (pos . 48) (origin mop-class . generic-function-method-class) (inline (G00734 (static-fpi-ref 3) (primitive-ref))) (setter (G00794 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . reconnect) (pos . 17) (origin stream2 . reconnect))
    ((name . allocate) (pos . 8) (origin mop-gf . allocate))
    ((name . thread-error-handlers) (pos . 16) (origin thread . thread-error-handlers) (inline (G00233 (static-fpi-ref 3) (binding-ref ? <thread>) (primitive-relative-ref))) (setter (G00253 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <thread>) (set-primitive-relative-ref) (nobble 2))))
    ((name . eos) (pos . 6) (origin read . eos) (class . constant))
    ((name . read-into-buffer) (pos . 27) (origin stream1 . read-into-buffer) (class . ff) (arity . 3) (ff (0 3 0) 0 (read_into_buffer . ff_stub_read_into_buffer4755)))
    ((name . stream-mode) (pos . 16) (origin stream2 . stream-mode) (inline (G005227 (static-ref0) (binding-ref ? <stream>) (primitive-relative-ref))))
    ((name . sprintf) (pos . 5) (origin stream . sprintf))
    ((name . the-method-lookup-function) (pos . 7) (origin mop-gf . the-method-lookup-function))
    ((name . compute-primitive-reader-using-slot) (pos . 4) (origin mop-access . compute-primitive-reader-using-slot))
    ((name . double?) (pos . 6) (origin float . double?))
    ((name . compute-slots) (pos . 9) (origin mop-alloc . compute-slots))
    ((name . discriminating-domain) (pos . 6) (origin mop-gf . discriminating-domain))
    ((name . int-binary*) (pos . 34) (origin boot1 . *) (inline (G0064 (fpi-product))))
    ((name . primitive-metaclass?) (pos . 6) (origin mop-inspect . primitive-metaclass?))
    ((name . <generic-function>) (pos . 44) (origin mop-class . <generic-function>) (class . constant))
    ((name . alphap) (pos . 4) (origin character . alphap))
    ((name . sf-direct-slot-defaults) (pos . 43) (origin mop-class . sf-direct-slot-defaults) (class . constant))
    ((name . table?) (pos . 6) (origin table1 . table?))
    ((name . generic-function-methods) (pos . 42) (origin mop-class . generic-function-methods) (inline (G00738 (static-fpi-ref 5) (primitive-ref))) (setter (G00798 (stack-ref 1) (static-fpi-ref 5) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . *get-load-dir*) (pos . 11) (origin i-param . *get-load-dir*))
    ((name . cons) (pos . 2) (origin boot1 . cons) (inline (G0086 (cons))))
    ((name . pprint) (pos . 3) (origin mop-access . pprint))
    ((name . binary-mod) (pos . 8) (origin number . binary-mod))
    ((name . prin-string) (pos . 4) (origin stream . prin-string))
    ((name . as-proper-list) (pos . 16) (origin list . as-proper-list))
    ((name . list-remove-duplicates) (pos . 14) (origin boot . list-remove-duplicates))
    ((name . ensure-slot-reader) (pos . 2) (origin mop-access . ensure-slot-reader))
    ((name . as-lowercase) (pos . 3) (origin character . as-lowercase))
    ((name . round) (pos . 5) (origin float . round))
    ((name . mode-table) (pos . 5) (origin stream1 . mode-table) (class . constant))
    ((name . eul_sprintf) (pos . 19) (origin stream1 . eul_sprintf) (class . ff) (arity . 4) (ff (3 0 3 8) 0 (eul_sprintf . ff_stub_eul_sprintf4747)))
    ((name . <integer>) (pos . 2) (origin integer . <integer>) (class . constant))
    ((name . bit-and) (pos . 2) (origin bit . bit-and))
    ((name . int-binary<) (pos . 42) (origin boot1 . <) (inline (G0072 (fpi-lt))))
    ((name . eql) (pos . 44) (origin boot1 . eql) (inline (G0037 (eql))))
    ((name . do1-list-last-special) (pos . 15) (origin list . do1-list-last-special))
    ((name . simple-hash-table?) (pos . 5) (origin table1 . simple-hash-table?))
    ((name . <name>) (pos . 33) (origin mop-class . <name>) (class . constant))
    ((name . primitive-stderr) (pos) (origin boot1 . stderr) (class . constant) (value 2))
    ((name . caaddr) (pos . 14) (origin list . caaddr) (inline (G003696 (cddr) (caar))) (setter (G003779 (stack-ref 1) (caddr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . vector?) (pos . 6) (origin vector . vector?))
    ((name . do2-vector) (pos . 5) (origin vector . do2-vector))
    ((name . access-table-print) (pos . 2) (origin aux-table . access-table-print))
    ((name . <) (pos . 42) (origin boot1 . <) (inline (G0072 (fpi-lt))))
    ((name . caaaar) (pos . 13) (origin list . caaaar) (inline (G003687 (caar) (caar))) (setter (G003770 (stack-ref 1) (caar) (car) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . generic-function-method-lookup-function) (pos . 31) (origin mop-class . generic-function-method-lookup-function) (inline (G00740 (static-fpi-ref 6) (primitive-ref))) (setter (G00800 (stack-ref 1) (static-fpi-ref 6) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . error) (pos . 12) (origin boot . error))
    ((name . cdddar) (pos . 11) (origin list . cdddar) (inline (G003728 (cdar) (cddr))) (setter (G003812 (stack-ref 1) (cdar) (cdr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . read-char) (pos . 5) (origin read . read-char))
    ((name . cddadr) (pos . 12) (origin list . cddadr) (inline (G003725 (cadr) (cddr))) (setter (G003809 (stack-ref 1) (cadr) (cdr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . socket-queue-size) (pos . 6) (origin socket . socket-queue-size) (inline (G005768 (static-ref0) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G005780 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . connection-host) (pos . 5) (origin socket . connection-host) (inline (G005778 (static-ref1) (binding-ref ? <connection>) (primitive-relative-ref))) (setter (G005790 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <connection>) (set-primitive-relative-ref) (nobble 2))))
    ((name . *interpreter*) (pos . 10) (origin i-param . *interpreter*))
    ((name . hostname) (pos . 3) (origin stream1 . hostname))
    ((name . table-size) (pos . 4) (origin table1 . table-size) (inline (G007812 (static-ref1) (binding-ref ? <table>) (primitive-relative-ref))) (setter (G007824 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <table>) (set-primitive-relative-ref) (nobble 2))))
    ((name . connection?) (pos . 4) (origin socket . connection?))
    ((name . *open-file-streams*-lock) (pos . 11) (origin stream2 . *open-file-streams*-lock) (class . constant))
    ((name . *C-library-load-path*) (pos . 9) (origin i-param . *C-library-load-path*))
    ((name . class-of) (pos . 5) (origin mop-inspect . class-of) (inline (G001495 (primitive-class-of))))
    ((name . select) (pos . 5) (origin collect . select))
    ((name . control-block-buffer-pos) (pos . 10) (origin stream2 . control-block-buffer-pos) (inline (G005215 (static-ref1) (binding-ref ? <stream-control-block>) (primitive-relative-ref))) (setter (G005245 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <stream-control-block>) (set-primitive-relative-ref) (nobble 2))))
    ((name . class-size) (pos) (origin mop-class . class-size) (class . constant) (value 10))
    ((name . *C-ranlib*) (pos . 8) (origin i-param . *C-ranlib*))
    ((name . cons-size) (pos) (origin mop-class . cons-size) (class . constant) (value 2))
    ((name . class-keywordz) (pos . 23) (origin mop-class . class-keywordz) (class . constant))
    ((name . <table>) (pos . 3) (origin table1 . <table>) (class . constant))
    ((name . *stack-nvalues*) (pos . 9) (origin boot . *stack-nvalues*))
    ((name . load-syntax-module) (pos . 5) (origin i-param . load-syntax-module))
    ((name . *stand-alone*) (pos . 7) (origin i-param . *stand-alone*))
    ((name . *dest-file-name*) (pos . 6) (origin i-param . *dest-file-name*))
    ((name . <lock>) (pos . 2) (origin lock . <lock>))
    ((name . <object>) (pos . 20) (origin mop-class . <object>) (class . constant))
    ((name . swrite) (pos . 3) (origin stream . swrite))
    ((name . truncate) (pos . 2) (origin float . truncate))
    ((name . keyword?) (pos . 2) (origin symbol . keyword?))
    ((name . gf-reset-cache) (pos . 3) (origin mop-gf . gf-reset-cache))
    ((name . list) (pos . 25) (origin boot1 . list))
    ((name . character-as-int) (pos) (origin boot1 . character-as-int) (class . opencoding) (arity . 1) (opencoding (character-as-fpi)))
    ((name . thread-unblock) (pos . 6) (origin thread . thread-unblock))
    ((name . mapcan) (pos . 6) (origin boot . mapcan))
    ((name . compute-inherited-slots) (pos . 3) (origin mop-alloc . compute-inherited-slots))
    ((name . get-ct-error-condition-class) (pos . 3) (origin i-param . get-ct-error-condition-class))
    ((name . *linked-C-ff-libraries*) (pos . 4) (origin i-param . *linked-C-ff-libraries*))
    ((name . getenv) (pos . 19) (origin boot1 . getenv))
    ((name . sread-s-expression) (pos . 4) (origin read . sread-s-expression))
    ((name . thread-value) (pos . 5) (origin thread . thread-value))
    ((name . O_RDWR) (pos . 2) (origin stream1 . O_RDWR) (class . constant))
    ((name . cadaar) (pos . 7) (origin list . cadaar) (inline (G003699 (caar) (cadr))) (setter (G003782 (stack-ref 1) (caar) (cdr) (stack-ref 0) (stack-ref 2) (set-car) (nobble 1) (nobble 2))))
    ((name . <file-stream>) (pos . 4) (origin stream2 . <file-stream>) (class . constant))
    ((name . <character-sequence>) (pos . 2) (origin string . <character-sequence>) (class . constant))
    ((name . positive?) (pos . 3) (origin number . positive?) (inline (G001928 (static-ref0) (stack-ref 1) (fpi-lt) (nobble 1))))
    ((name . compute-class-codes) (pos . 2) (origin mop-init . compute-class-codes))
    ((name . cdaaar) (pos . 4) (origin list . cdaaar) (inline (G003710 (caar) (cdar))) (setter (G003794 (stack-ref 1) (caar) (car) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . <file-control-block>) (pos . 3) (origin stream2 . <file-control-block>) (class . constant))
    ((name . socket-descriptor) (pos . 3) (origin socket . socket-descriptor) (inline (G005770 (static-ref1) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G005782 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . remove-class) (pos . 4) (origin mop-defcl . remove-class))
    ((name . *double-size-in-decimal-digits*) (pos) (origin stream . *double-size-in-decimal-digits*) (class . constant) (value 25))
    ((name . dynamic-variable-ref) (pos . 3) (origin dynamic . dynamic-variable-ref))
    ((name . cdar) (pos . 6) (origin list . cdar) (inline (G003660 (cdar))) (setter (G003740 (stack-ref 1) (car) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . stack-values) (pos . 4) (origin boot . stack-values))
    ((name . class-precedence-list) (pos . 6) (origin mop-class . class-precedence-list) (inline (G00720 (static-fpi-ref 6) (primitive-ref))) (setter (G00780 (stack-ref 1) (static-fpi-ref 6) (stack-ref 2) (set-primitive-ref) (nobble 2))))
    ((name . predefined-writer) (pos . 3) (origin mop-defcl . predefined-writer))
    ((name . generic-function?) (pos . 3) (origin mop-inspect . generic-function?))
    ((name . thread-suspend) (pos . 4) (origin thread . thread-suspend))
    ((name . table-keys) (pos . 2) (origin table1 . table-keys))
    ((name . -) (pos . 16) (origin boot1 . -) (inline (G0062 (fpi-difference))))
    ((name . null?) (pos . 10) (origin boot1 . null?) (inline (G0039 (null))))
    ((name . <symbol>) (pos . 5) (origin mop-class . <symbol>) (class . constant))
    ((name . make) (pos . 2) (origin mop-gf . make))
    ((name . *eulysses-dir*) (pos . 2) (origin i-param . *eulysses-dir*))
    ((name . vector-size) (pos . 8) (origin boot1 . vector-size) (inline (G0092 (primitive-size))))
    ((name . cddddr) (pos . 2) (origin list . cddddr) (inline (G003731 (cddr) (cddr))) (setter (G003815 (stack-ref 1) (cddr) (cdr) (stack-ref 0) (stack-ref 2) (set-cdr) (nobble 1) (nobble 2))))
    ((name . lsd-slot-defaults) (pos . 4) (origin mop-class . lsd-slot-defaults) (class . constant))
    ((name . member1-vector) (pos . 2) (origin vector . member1-vector))
    ((name . <connection>) (pos . 2) (origin socket . <connection>) (class . constant))
    ((name . name-slots) (pos . 3) (origin mop-class . name-slots) (class . constant))
    ((name . simple-function?) (pos . 4) (origin boot1 . simple-function?) (inline (G0051 (lambdap))))
    ((name . <simple-function>) (pos . 2) (origin mop-class . <simple-function>) (class . constant))
    ((name . flush) (pos . 2) (origin stream . flush))
   )
   local-literals (
   )
   literals (
   )
))
