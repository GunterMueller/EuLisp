;;; EuLisp system 'youtoo'
;;;   Interface file for module i-rep

(definterface i-rep
  (import (i-all i-args sx-obj sx-node i-compile cg-interf cg-dld ex-expr ex-import ex-syntax p-env cg-exec read)
   syntax (_macros)
   full-import (i-error i-notify i-param i-level1 boot1 boot symbol stream3 random handler read table table1 vector convert1 format list socket stream2 lock stream1 stream float character compare collect fpi number integer copy convert string callback let-cc dynamic thread event condition bit mop-alloc mop-access mop-prim mop-key mop-class mop-init mop-inspect mop-gf mop-meth mop-defcl telos level1 aux-table i-all i-args sx-obj2 sx-obj1 sx-obj p-env i-ffi sx-node cg-exec cg-exec-word-length cg-link cg-asm cg-bycode cg-bycode1 cg-bycode2 op-peep op-peep-r cg-gen cg-state cg-stack an-side p-parse ex-expr cg-dld ex-direct ex-expose ex-syntax ex-import cg-interf ex-module ex-body sx-write p-read i-modify i-compile)
   export (
    ((name . show-help) (pos . 9) (origin i-rep . show-help))
    ((name . dynamic-binding-set1) (pos . 12) (origin cg-dld . dynamic-binding-set1) (class . ff) (arity . 3) (ff (3 0 8) 6 (eul_dyn_binding_set . ff_stub_eul_dyn_binding_set5715)))
    ((name . show-module-bindings) (pos . 15) (origin i-rep . show-module-bindings))
    ((name . module-loaded?) (pos . 6) (origin cg-dld . module-loaded?))
    ((name . ?) (pos . 13) (origin i-rep . ?))
    ((name . dynamic-load-module) (pos . 3) (origin cg-dld . dynamic-load-module))
    ((name . debug-eval) (pos . 17) (origin i-rep . debug-eval))
    ((name . rep) (pos . 6) (origin i-rep . rep))
    ((name . dynamic-binding-ref1) (pos . 11) (origin cg-dld . dynamic-binding-ref1) (class . ff) (arity . 2) (ff (3 0) 6 (eul_dyn_binding_ref . ff_stub_eul_dyn_binding_ref5714)))
    ((name . as-C-module-name) (pos . 14) (origin cg-dld . as-C-module-name) (class . ff) (arity . 1) (ff (8) 3 (eul_module_name_as_C_module_name_string . ff_stub_eul_module_name_as_C_module_name_string5717)))
    ((name . as-dynamic-binding) (pos . 4) (origin cg-dld . as-dynamic-binding))
    ((name . dynamic-load-module1) (pos . 13) (origin cg-dld . dynamic-load-module1) (class . ff) (arity . 2) (ff (3 3) 0 (eul_dyn_load_module . ff_stub_eul_dyn_load_module5716)))
    ((name . show-class-hierarchy) (pos . 7) (origin i-rep . show-class-hierarchy))
    ((name . dynamic-binding-ref) (pos . 7) (origin cg-dld . dynamic-binding-ref))
    ((name . eval) (pos . 8) (origin i-rep . eval))
    ((name . dynamic-binding-set) (pos . 9) (origin cg-dld . dynamic-binding-set))
   )
   local-literals (
    (top-level . 144)
    (debug-rep . 143)
    (show-imported-modules . 142)
    (check-module-envs . 141)
    (rep . 140)
    (show-class-hierarchy . 139)
    (show-help . 138)
    (initialize-interpreter . 137)
    (load-file-exprs . 136)
    (show-module-bindings . 135)
    (rep-aux . 134)
    (debug-eval . 133)
    (continue: . 131)
    (reset: . 130)
    ("-> ~s
" . 127)
    ("" . 126)
    ("~a> " . 125)
    (y . 121)
    ("Continue? (y/n) " . 120)
    (*clean-ups* . 117)
    ("No such file or directory ~a in ~a" . 116)
    (progn . 113)
    (read-action: . 111)
    (source: . 110)
    (r . 109)
    (mode: . 108)
    (file-name: . 107)
    (default-error-handler . 106)
    (cerror . 105)
    ("EuLisp System Youtoo - Version ~a
" . 104)
    (message: . 100)
    (dummy . 98)
    (execute . 97)
    ("exit:                      exit interpreter" . 94)
    ("[Ctrl-z]                   suspend interpreter" . 93)
    ("[Ctrl-c]                   interrupt computation" . 92)
    ("[Ctrl-d]                   exit interpreter or resume from previous error" . 91)
    ("resume:                    resume from previous error" . 90)
    ("reset:                     resume from all errors" . 89)
    ("continue:                  continue computation" . 88)
    ("values:                    show stack values" . 87)
    ("backtrace:                 show backtrace" . 86)
    ("untrace: <functon-name>    stop tracing function invocation" . 85)
    ("trace: <function-name>     trace function invocation" . 84)
    ("silent:                    run silent" . 83)
    ("verbose:                   run verbose" . 82)
    ("lexical-bindings:          show lexical environment" . 81)
    ("?                          previous value" . 80)
    ("load: <file-name>          evaluate file expressions" . 79)
    (help: . 77)
    ("~a" . 76)
    (-: . 75)
    (redefine: . 74)
    (hierarchy: . 73)
    (silent: . 72)
    (verbose: . 71)
    (import: . 70)
    (syntax-import: . 69)
    (lexical-import: . 68)
    (syntax-bindings: . 67)
    (lexical-bindings: . 66)
    (defined-syntax-bindings: . 65)
    (defined-lexical-bindings: . 64)
    (values: . 63)
    (backtrace: . 62)
    (untrace . 61)
    (untrace: . 60)
    (trace . 59)
    (trace: . 58)
    (exit: . 57)
    ("~a" . 56)
    (load: . 55)
    (user . 54)
    (:: . 53)
    (: . 52)
    (dynamic-binding-ref1 . 51)
    (dynamic-binding-ref . 50)
    (@ . 49)
    (eval . 48)
    (quote . 47)
    (? . 46)
    ("" . 43)
    ("~a~a<~a>
" . 41)
    (" " . 40)
    ("A" . 39)
    ("  " . 38)
    (call/ep-lambda . 32)
    (anonymous . 31)
    ("-> ~s
" . 29)
    (resume: . 28)
    (*actual-module* . 27)
    ("[error~a]~a> " . 26)
    (|(method binary<)| . 23)
   )
   literals (
   )
))
