;;; EuLisp system 'youtoo'
;;;   Interface file for module socket

(definterface socket
  (import (telos lock condition convert dynamic stream1 stream2 string)
   syntax (_macros)
   full-import ()
   export (
    ((name . connection?) (pos . 4) (origin socket . connection?))
    ((name . socket-host) (pos . 11) (origin socket . socket-host) (inline (G003351 (static-ref2) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G003363 (stack-ref 1) (static-ref2) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . socket-port) (pos . 9) (origin socket . socket-port) (inline (G003353 (static-fpi-ref 3) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G003365 (stack-ref 1) (static-fpi-ref 3) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . socket-queue-size) (pos . 6) (origin socket . socket-queue-size) (inline (G003347 (static-ref0) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G003359 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
    ((name . connection-host) (pos . 5) (origin socket . connection-host) (inline (G003357 (static-ref1) (binding-ref ? <connection>) (primitive-relative-ref))) (setter (G003369 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <connection>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <connection>) (pos . 2) (origin socket . <connection>) (class . constant))
    ((name . connection-port) (pos . 7) (origin socket . connection-port) (inline (G003355 (static-ref0) (binding-ref ? <connection>) (primitive-relative-ref))) (setter (G003367 (stack-ref 1) (static-ref0) (stack-ref 2) (binding-ref ? <connection>) (set-primitive-relative-ref) (nobble 2))))
    ((name . <socket>) (pos . 8) (origin socket . <socket>) (class . constant))
    ((name . socket?) (pos . 10) (origin socket . socket?))
    ((name . socket-descriptor) (pos . 3) (origin socket . socket-descriptor) (inline (G003349 (static-ref1) (binding-ref ? <socket>) (primitive-relative-ref))) (setter (G003361 (stack-ref 1) (static-ref1) (stack-ref 2) (binding-ref ? <socket>) (set-primitive-relative-ref) (nobble 2))))
   )
   local-literals (
    (top-level . 75)
    (socket-descriptor . 74)
    (connection-host . 73)
    (socket-queue-size . 72)
    (connection-port . 71)
    (socket-port . 70)
    (socket-host . 69)
    (|(method connection?)| . 61)
    (|(setter connection-host)| . 60)
    (|(setter connection-port)| . 59)
    (|(method initialize)| . 58)
    (|(method socket?)| . 57)
    (|(setter socket-port)| . 56)
    (|(setter socket-host)| . 55)
    (|(setter socket-descriptor)| . 54)
    (|(setter socket-queue-size)| . 53)
    (connection? . 52)
    (socket? . 51)
    ((socket: port: host:) . 50)
    (socket: . 49)
    (connection . 48)
    ((queue-size: host: port:) . 47)
    (direct-keywords: . 46)
    (direct-slots: . 45)
    (direct-superclasses: . 44)
    (socket . 43)
    (queue-size: . 42)
    (queue-size . 41)
    (descriptor . 40)
    (host: . 39)
    (host . 38)
    (port: . 37)
    (keyword: . 36)
    (default: . 35)
    (port . 34)
    (name: . 33)
    (anonymous . 20)
    (*clean-ups* . 19)
    (value: . 18)
    ("tcp" . 17)
   )
   literals (
   )
))
